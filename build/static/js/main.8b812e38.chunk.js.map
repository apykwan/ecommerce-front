{"version":3,"sources":["config.js","auth/index.js","core/Menu.js","core/cartHelpers.js","core/Layout.js","user/Signup.js","user/Signin.js","core/ShowImage.js","core/Card.js","core/apiCore.js","core/Search.js","core/Home.js","auth/PrivateRoute.js","user/UserDashboard.js","user/apiUser.js","auth/AdminRoute.js","user/AdminDashboard.js","admin/apiAdmin.js","admin/AddCategory.js","admin/AddProduct.js","admin/UpdateProduct.js","admin/Orders.js","core/Checkbox.js","core/RadioBox.js","core/fixedPrice.js","core/Shop.js","core/Product.js","core/Checkout.js","core/Cart.js","user/Profile.js","admin/ManageProducts.js","Routes.js","index.js"],"names":["API","process","isAuthenticated","window","localStorage","getItem","JSON","parse","isActive","history","path","location","pathname","color","withRouter","useState","cart","setCart","useEffect","cartUpdated","updateCart","className","style","to","length","user","role","cursor","onClick","next","removeItem","fetch","method","then","response","console","log","catch","err","signout","push","Layout","title","description","children","Signup","name","email","password","rePassword","error","success","values","setValues","handleChange","event","target","value","clickSubmit","preventDefault","headers","Accept","body","stringify","json","data","onChange","type","autoComplete","display","Signin","loading","redirectToReferrer","signin","setItem","authenticate","ShowImage","item","url","src","_id","alt","maxHeight","maxWidth","Card","product","showViewProductButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","undefined","redirect","setRedirect","count","setCount","AddToCart","Array","from","Set","map","p","id","find","addItem","productId","idx","updateItem","shouldRedirect","substring","price","category","moment","createdAt","fromNow","quantity","showAddToCart","splice","showRemoveButton","showCartUpdateOptions","getProducts","sortBy","getCategories","getFilteredProduct","skip","limit","filters","Search","categories","search","results","searched","setData","searchData","params","query","queryString","list","searchMessage","searchSubmit","onSubmit","key","placeholder","border","searchedProducts","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","setError","PrivateRoute","Component","component","rest","render","props","state","Dashboard","setHistory","token","init","userId","Authorization","getPurchaseHistory","h","products","pIndex","purchaseHistory","AdminRoute","AdminDashboard","AddCategory","setName","setSuccess","e","createCategory","autoFocus","required","showError","showSuccess","AddProduct","shipping","photo","createdProduct","redirectToProfile","formData","FormData","files","set","createProduct","accept","UpdateProduct","match","getProduct","initCategories","updateProduct","redirectUser","Orders","orders","setOrders","statusValues","setStatusValues","loadOrders","listOrders","loadStatusValues","getStatusValues","showInput","readOnly","handleStatusChange","orderId","status","updateOrderStatus","order","oIndex","borderBottom","index","showStatus","amount","address","padding","Checkbox","handleFilters","checked","setChecked","handleToggle","currentCategoryId","indexOf","newCheckedCategoryId","RadioBox","prices","setValue","array","Shop","myFilters","setMyFilters","setCategories","setSkip","size","setSize","filteredResult","setFilteredResult","loadFilteredResults","newFilters","loadMore","toSkip","filterBy","priceValues","handlePrice","findIndex","d","parseInt","Product","setProduct","relatedProduct","setRelatedProduct","loadSingleProduct","read","listRelated","Checkout","clientToken","instance","getToken","getBraintreeClientToken","handleAddress","getTotal","reduce","currentValue","nextvalue","toFixed","deliveryAddress","buy","requestPaymentMethod","paymentData","paymentMethodNonce","nonce","processPayment","createOrderData","transaction_id","transaction","createOrder","message","showDropIn","onBlur","options","authorization","paypal","flow","onInstance","Cart","items","setItems","showItems","Profile","update","alert","auth","updateUser","profileUpdate","ManageProducts","setProducts","loadProducts","destroy","deleteProduct","Routes","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"iQAAaA,EAAMC,4BC0DNC,EAAkB,WAC3B,MAAoB,oBAAVC,WAIPC,aAAaC,QAAQ,QACbC,KAAKC,MAAMH,aAAaC,QAAQ,UC1DzCG,EAAW,SAACC,EAASC,GACvB,OAAGD,EAAQE,SAASC,WAAaF,EACtB,CAAEG,MAAO,WAET,CAAEA,MAAO,YA8GTC,eA1GF,SAAC,GAAiB,IAAfL,EAAc,EAAdA,QAAc,EACFM,mBAAS,IADP,mBACnBC,EADmB,KACbC,EADa,KAY1B,OAJAC,qBAAU,YALS,WACf,IAAMC,EAAcf,aAAaC,QAAQ,QACzCY,EAAQE,GAIRC,KACD,CAACJ,IAGA,6BACI,wBAAIK,UAAU,2BACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVC,MAAOd,EAASC,EAAS,KACzBc,GAAG,KAHP,SAQJ,wBAAIF,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVC,MAAOd,EAASC,EAAS,SACzBc,GAAG,SAHP,SAQJ,wBAAIF,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVC,MAAOd,EAASC,EAAS,SACzBc,GAAG,SAHP,QAKS,6BAAK,2BAAOF,UAAU,cCvBzB,qBAAXlB,QACHC,aAAaC,QAAQ,QACdC,KAAKC,MAAMH,aAAaC,QAAQ,SAASmB,OAGjD,MDsBMtB,KAAqD,IAAhCA,IAAkBuB,KAAKC,KACzC,wBAAIL,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVC,MAAOd,EAASC,EAAS,mBACzBc,GAAG,mBAHP,cASA,wBAAIF,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVC,MAAOd,EAASC,EAAS,oBACzBc,GAAG,oBAHP,cAUVrB,IAsBM,wBAAImB,UAAU,YACV,0BACIA,UAAU,WACVC,MAAO,CAAEK,OAAQ,UAAWd,MAAO,WACnCe,QAAS,YD9DlB,SAAAC,GACnB,GAAsB,qBAAX1B,OACPC,aAAa0B,WAAW,OACxBD,IAEOE,MAAM,GAAD,OAAI/B,EAAJ,YAAmB,CAC3BgC,OAAQ,QAEXC,MAAK,SAAAC,GACFC,QAAQC,IAAI,UAAWF,MAE1BG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MCoDEC,EAAQ,WACJ9B,EAAQ+B,KAAK,UALzB,YAtBR,kBAAC,WAAD,KACI,wBAAInB,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVC,MAAOd,EAASC,EAAS,WACzBc,GAAG,WAHP,WAQJ,wBAAIF,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVC,MAAOd,EAASC,EAAS,WACzBc,GAAG,WAHP,iBEtEbkB,G,MAhBA,SAAC,GAAD,QACXC,aADW,MACH,QADG,MAEXC,mBAFW,MAEG,cAFH,EAGXtB,EAHW,EAGXA,UACAuB,EAJW,EAIXA,SAJW,OAMX,6BACI,kBAAC,EAAD,MACA,yBAAKvB,UAAU,aACX,4BAAKqB,GACL,uBAAGrB,UAAU,QAAQsB,IAEzB,yBAAKtB,UAAWA,GAAYuB,MC+HrBC,EA1IA,WAAO,IAAD,EACW9B,mBAAS,CACjC+B,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,WAAY,GACZC,MAAO,GACPC,SAAS,IAPI,mBACVC,EADU,KACFC,EADE,KAUTP,EAAsDM,EAAtDN,KAAMC,EAAgDK,EAAhDL,MAAOC,EAAyCI,EAAzCJ,SAAUC,EAA+BG,EAA/BH,WAAYC,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QAE5CG,EAAe,SAAAR,GAAI,OAAI,SAAAS,GACzBF,EAAU,2BACHD,GADE,gBAELF,OAAO,GACNJ,EAAOS,EAAMC,OAAOC,WAIvBC,EAAc,SAAAH,GAGhB,GAFAA,EAAMI,iBACNN,EAAU,2BAAKD,GAAN,IAAcF,OAAO,KAC1BF,IAAaC,EACb,OAAOI,EAAU,2BACVD,GADS,IAEZJ,SAAU,GACVC,WAAY,GACZC,MAAO,sCJhCD,IAAAzB,KIoCP,CAAEqB,OAAMC,QAAOC,YJnCnBjB,MAAM,GAAD,OAAI/B,EAAJ,WAAkB,CAC1BgC,OAAQ,OACR4B,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMxD,KAAKyD,UAAUtC,KAEpBQ,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GACHH,QAAQC,IAAIE,OIwBfL,MAAK,SAAAgC,GACCA,EAAKf,MACJG,EAAU,2BACHD,GADE,IAELF,MAAOe,EAAKf,MACZC,SAAS,KAGbE,EAAU,2BACHD,GADE,IAELN,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,WAAY,GACZC,MAAO,GACPC,SAAS,SA6EzB,OACI,kBAAC,EAAD,CACIT,MAAM,cACNC,YAAY,4BACZtB,UAAU,kCAxDd,8BACI,yBAAKA,UAAU,cACX,2BAAOA,UAAU,cAAjB,QACA,2BACI6C,SAAUZ,EAAa,QACvBa,KAAK,OACL9C,UAAU,eACVoC,MAAOX,KAIf,yBAAKzB,UAAU,cACX,2BAAOA,UAAU,cAAjB,SACA,2BACI6C,SAAUZ,EAAa,SACvBa,KAAK,QACL9C,UAAU,eACVoC,MAAOV,KAIf,yBAAK1B,UAAU,cACX,2BAAOA,UAAU,cAAjB,YACA,2BACI6C,SAAUZ,EAAa,YACvBa,KAAK,WACL9C,UAAU,eACVoC,MAAOT,EACPoB,aAAa,UAIrB,yBAAK/C,UAAU,cACX,2BAAOA,UAAU,cAAjB,qBACA,2BACI6C,SAAUZ,EAAa,cACvBa,KAAK,WACL9C,UAAU,eACVoC,MAAOR,EACPmB,aAAa,UAIrB,4BACI/C,UAAU,kBACVO,QAAS8B,GAFb,WApDJ,yBACIrC,UAAU,wBACVC,MAAO,CAAE+C,QAASlB,EAAU,GAAK,SAFrC,yCAI0C,kBAAC,IAAD,CAAM5B,GAAG,WAAT,UAJ1C,KATA,yBACIF,UAAU,0BACVC,MAAO,CAAE+C,QAASnB,EAAQ,GAAK,SAE9BA,KC4DEoB,EAvHA,WAAO,IAAD,EACWvD,mBAAS,CACjCgC,MAAO,kBACPC,SAAU,UACVE,MAAO,GACPqB,SAAS,EACTC,oBAAoB,IANP,mBACVpB,EADU,KACFC,EADE,KASTN,EAAwDK,EAAxDL,MAAOC,EAAiDI,EAAjDJ,SAAUE,EAAuCE,EAAvCF,MAAOqB,EAAgCnB,EAAhCmB,QAASC,EAAuBpB,EAAvBoB,mBACjC/C,EAASvB,IAATuB,KAEF6B,EAAe,SAAAR,GAAI,OAAI,SAAAS,GACzBF,EAAU,2BACHD,GADE,gBAELF,OAAO,GACNJ,EAAOS,EAAMC,OAAOC,WAIvBC,EAAc,SAAAH,GAChBA,EAAMI,iBACNN,EAAU,2BAAKD,GAAN,IAAcF,OAAO,EAAOqB,SAAS,KLThC,SAAA9C,GAClB,OAAOM,MAAM,GAAD,OAAI/B,EAAJ,WAAkB,CAC1BgC,OAAQ,OACR4B,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMxD,KAAKyD,UAAUtC,KAEpBQ,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GACHH,QAAQC,IAAIE,MKFhBmC,CAAO,CAAE1B,QAAOC,aACXf,MAAK,SAAAgC,GACEA,EAAKf,MACLG,EAAU,2BACHD,GADE,IAELF,MAAOe,EAAKf,MACZqB,SAAS,KLAL,SAACN,EAAMpC,GACV,qBAAX1B,SACNC,aAAasE,QAAQ,MAAOpE,KAAKyD,UAAUE,IAC3CpC,KKAY8C,CAAaV,GAAM,WACfZ,EAAU,2BACHD,GADE,IAELoB,oBAAoB,YAqE5C,OACI,kBAAC,EAAD,CACI9B,MAAM,cACNC,YAAY,4BACZtB,UAAU,kCAnCd,8BACI,yBAAKA,UAAU,cACX,2BAAOA,UAAU,cAAjB,SACA,2BACI6C,SAAUZ,EAAa,SACvBa,KAAK,QACL9C,UAAU,eACVoC,MAAOV,KAIf,yBAAK1B,UAAU,cACX,2BAAOA,UAAU,cAAjB,YACA,2BACI6C,SAAUZ,EAAa,YACvBa,KAAK,WACL9C,UAAU,eACVoC,MAAOT,EACPoB,aAAa,UAIrB,4BACI/C,UAAU,kBACVO,QAAS8B,GAFb,WA3CJa,GACI,yBAAKlD,UAAU,oBAAf,IACI,2CAXR,yBACIA,UAAU,0BACVC,MAAO,CAAE+C,QAASnB,EAAQ,GAAK,SAE9BA,GAaFsB,EACI/C,GAAsB,IAAdA,EAAKC,KACL,kBAAC,IAAD,CAAUH,GAAG,qBAEb,kBAAC,IAAD,CAAUA,GAAG,oBAGzBrB,IACQ,kBAAC,IAAD,CAAUqB,GAAG,WADxB,I,iBC5DOqD,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAT,OACd,yBAAKzD,UAAU,eACX,yBACI0D,IAAG,UAAK/E,EAAL,YAAY8E,EAAZ,kBAAyBD,EAAKG,KACjCC,IAAKJ,EAAK/B,KACVzB,UAAU,OACVC,MAAO,CAAE4D,UAAW,OAAQC,SAAU,YCwHnCC,EA1HF,SAAC,GAQP,IAPHC,EAOE,EAPFA,QAOE,IANFC,6BAME,aALFC,2BAKE,aAJFC,kBAIE,aAHFC,+BAGE,aAFFC,cAEE,MAFO,SAAAC,GAAC,OAAIA,GAEZ,MADFC,WACE,WADIC,EACJ,IAC8B9E,oBAAS,GADvC,mBACK+E,EADL,KACeC,EADf,OAEwBhF,mBAASsE,EAAQW,OAFzC,mBAEKA,EAFL,KAEYC,EAFZ,KAgBIC,EAAY,YL/BC,WAA0C,IAAzCrB,EAAwC,uDAAjC,GAAehD,EAAkB,uDAAX,SAAA8D,GAAC,OAAIA,GAClD3E,EAAO,GACW,qBAAXb,SACHC,aAAaC,QAAQ,UACrBW,EAAOV,KAAKC,MAAMH,aAAaC,QAAQ,UAE3CW,EAAKwB,KAAL,2BACOqC,GADP,IAEImB,MAAO,KAYXhF,EAAOmF,MAAMC,KAAK,IAAIC,IAAIrF,EAAKsF,KAAI,SAAAC,GAAC,OAAIA,EAAEvB,SAAOsB,KAAI,SAAAE,GACjD,OAAOxF,EAAKyF,MAAK,SAAAF,GAAC,OAAIA,EAAEvB,MAAQwB,QAGpCpG,aAAasE,QAAQ,OAAQpE,KAAKyD,UAAU/C,IAC5Ca,KKOA6E,CAAQrB,EAASU,GAAY,KAsC3BzC,EAAe,SAAAqD,GAAS,OAAI,SAAApD,GAC9BmC,GAAQE,GACRK,EAAS1C,EAAMC,OAAOC,MAAQ,EAAI,EAAGF,EAAMC,OAAOC,OAC/CF,EAAMC,OAAOC,OAAS,GL1BP,SAACkD,EAAWX,GAClC,IAAIhF,EAAO,GACU,qBAAXb,SACHC,aAAaC,QAAQ,UACpBW,EAAOV,KAAKC,MAAMH,aAAaC,QAAQ,UAG3CW,EAAKsF,KAAI,SAACjB,EAASuB,GACZvB,EAAQL,MAAQ2B,IACf3F,EAAK4F,GAAKZ,MAAQA,MAI1B5F,aAAasE,QAAQ,OAAQpE,KAAKyD,UAAU/C,KKcxC6F,CAAWF,EAAWpD,EAAMC,OAAOC,SA4B3C,OACI,yBAAKpC,UAAU,QACX,yBAAKA,UAAU,oBAAoBgE,EAAQvC,MAC3C,yBAAKzB,UAAU,aAtDA,SAAAyE,GACnB,GAAIA,EACA,OAAO,kBAAC,IAAD,CAAUvE,GAAG,UAqDfuF,CAAehB,GAChB,kBAAC,EAAD,CAAWjB,KAAMQ,EAASP,IAAI,YAC9B,uBAAGzD,UAAU,aACRgE,EAAQ1C,YAAYoE,UAAU,EAAG,MAEtC,uBAAG1F,UAAU,YAAb,IAA0BgE,EAAQ2B,OAClC,uBAAG3F,UAAU,WAAb,aACegE,EAAQ4B,UAAY5B,EAAQ4B,SAASnE,MAEpD,uBAAGzB,UAAU,WAAb,YACc6F,IAAO7B,EAAQ8B,WAAWC,WAE7B/B,EAAQgC,SArBT,EACZ,0BAAMhG,UAAU,iCAAhB,YACA,0BAAMA,UAAU,iCAAhB,gBAoBE,6BAlGJiE,GACI,kBAAC,IAAD,CAAM/D,GAAE,mBAAc8D,EAAQL,MAC1B,4BAAQ3D,UAAU,0CAAlB,iBAkCM,SAAAkE,GAClB,OACIA,GACI,4BACIlE,UAAU,oCACVO,QAASsE,GAFb,eA6DCoB,CAAc/B,GAtFF,SAAAE,GACrB,OACIA,GACI,4BACIpE,UAAU,mCACVO,QAAS,YLwBH,SAAC+E,GACvB,IAAI3F,EAAO,GACW,qBAAXb,SACHC,aAAaC,QAAQ,UACrBW,EAAOV,KAAKC,MAAMH,aAAaC,QAAQ,UAG3CW,EAAKsF,KAAI,SAACjB,EAASuB,GACXvB,EAAQL,MAAQ2B,GAChB3F,EAAKuG,OAAOX,EAAK,MAIzBxG,aAAasE,QAAQ,OAAQpE,KAAKyD,UAAU/C,KKpC5Bc,CAAWuD,EAAQL,KACnBU,GAAQE,KAJhB,eAoFC4B,CAAiB/B,GA5CA,SAAAD,GAC1B,OAAOA,GACH,6BACI,yBAAKnE,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,oBAEJ,2BACI8C,KAAK,SACL9C,UAAU,eACVoC,MAAOuC,EACP9B,SAAUZ,EAAa+B,EAAQL,SAkCtCyC,CAAsBjC,M,iBCvH1BkC,EAAc,SAAAC,GACvB,OAAO5F,MAAM,GAAD,OAAI/B,EAAJ,4BAA2B2H,EAA3B,uBAAwD,CAChE3F,OAAQ,QAEPC,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OAGrBsF,EAAgB,WACzB,OAAO7F,MAAM,GAAD,OAAI/B,EAAJ,eAAsB,CAC9BgC,OAAQ,QAEPC,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OAGrBuF,EAAqB,SAACC,EAAMC,GAAyB,IAAlBC,EAAiB,uDAAP,GAChD/D,EAAO,CACT8D,QACAD,OACAE,WAEJ,OAAOjG,MAAM,GAAD,OAAI/B,EAAJ,uBAA8B,CACtCgC,OAAQ,OACR4B,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMxD,KAAKyD,UAAUE,KAEpBhC,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GACHH,QAAQC,IAAIE,OC+FT2F,EAnIA,WAAO,IAAD,EACOlH,mBAAS,CAC7BmH,WAAY,GACZjB,SAAU,GACVkB,OAAQ,GACRC,QAAS,GACTC,UAAU,IANG,mBACVpE,EADU,KACJqE,EADI,KAUbJ,EAKAjE,EALAiE,WACAjB,EAIAhD,EAJAgD,SACAkB,EAGAlE,EAHAkE,OACAC,EAEAnE,EAFAmE,QACAC,EACApE,EADAoE,SAcEE,EAAa,WAEZJ,GDUS,SAAAK,GAChBrG,QAAQC,IAAI,SAAUoG,GACtB,IAAMC,EAAQC,IAAY3E,UAAUyE,GAEpC,OADArG,QAAQC,IAAI,QAASqG,GACd1G,MAAM,GAAD,OAAI/B,EAAJ,4BAA2ByI,GAAS,CAC5CzG,OAAQ,QAEPC,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MCnBtBqG,CAAK,CAACR,OAAQA,QAAUtC,EAAWoB,SAAUA,IACxChF,MAAK,SAAAC,GACCA,EAASgB,MACRf,QAAQC,IAAIF,EAASgB,OAErBoF,EAAQ,2BACDrE,GADA,IAEHmE,QAASlG,EACTmG,UAAU,SAO5BO,EAAgB,SAACP,EAAUD,GAC7B,OAAGC,GAAYD,EAAQ5G,OAAS,EACtB,SAAN,OAAgB4G,EAAQ5G,OAAxB,cAEA6G,GAAYD,EAAQ5G,OAAS,EACvB,4BADV,GAKEqH,EAAe,SAAAtF,GACjBA,EAAMI,iBACN4E,KAGEjF,EAAe,SAAAR,GAAI,OAAI,SAAAS,GAAU,IAAD,EAClC+E,EAAQ,2BACDrE,GADA,uBAEFnB,EAAOS,EAAMC,OAAOC,OAFlB,0BAGO,GAHP,OAyDX,OAJAvC,qBAAU,WAhGN0G,IACK3F,MAAK,SAAAgC,GACCA,EAAKf,MACJf,QAAQC,IAAI6B,EAAKf,OAEjBoF,EAAQ,2BAAIrE,GAAL,IAAWiE,WAAYjE,UA6F5C,IAGE,yBAAK5C,UAAU,OACX,yBAAKA,UAAU,kBApCnB,0BAAMyH,SAAUD,GACZ,0BAAMxH,UAAU,oBACZ,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,uBACX,4BACIA,UAAU,WACV6C,SAAUZ,EAAa,aAEvB,4BAAQG,MAAM,OAAd,gBACCyE,EAAW5B,KAAI,SAACW,EAAUL,GAAX,OACZ,4BAAQmC,IAAKnC,EAAKnD,MAAOwD,EAASjC,KAC7BiC,EAASnE,WAK1B,2BACIqB,KAAK,SACL9C,UAAU,eACV6C,SAAUZ,EAAa,UACvB0F,YAAY,oBAGpB,yBAAK3H,UAAU,yBAAyBC,MAAO,CAAC2H,OAAQ,SACpD,4BAAQ5H,UAAU,oBAAlB,cAgBR,yBAAKA,UAAU,wBAxDE,WAAmB,IAAlB+G,EAAiB,uDAAP,GAChC,OACI,6BACI,wBAAI/G,UAAU,aACTuH,EAAcP,EAAUD,IAE7B,yBAAK/G,UAAU,OACV+G,EAAQ9B,KAAI,SAACjB,EAASuB,GAAV,OACT,kBAAC,EAAD,CAAMvB,QAASA,EAAS0D,IAAKnC,SAiDpCsC,CAAiBd,MChEnBe,EA5DF,WAAO,IAAD,EAC6BpI,mBAAS,IADtC,mBACRqI,EADQ,KACQC,EADR,OAEmCtI,mBAAS,IAF5C,mBAERuI,EAFQ,KAEWC,EAFX,OAGWxI,oBAAS,GAHpB,mBAGDyI,GAHC,WAgCf,OALAtI,qBAAU,WAVNwG,EAAY,aACPzF,MAAK,SAAAgC,GACEA,EAAKf,MACLsG,EAASvF,EAAKf,OAEdqG,EAAqBtF,MAhBjCyD,EAAY,QACPzF,MAAK,SAAAgC,GACCA,EAAKf,MACJsG,EAASvF,EAAKf,OAEdmG,EAAkBpF,QAmB/B,IAGC,kBAAC,EAAD,CACIvB,MAAM,YACNC,YAAY,4BACZtB,UAAU,mBAEV,kBAAC,EAAD,MACA,wBAAIA,UAAU,QAAd,eACA,yBAAKA,UAAU,OACV+H,EAAe9C,KAAI,SAACjB,EAASuB,GAAV,OAChB,yBAAKmC,IAAKnC,EAAKvF,UAAU,cACrB,kBAAC,EAAD,CAAMgE,QAASA,SAK3B,wBAAIhE,UAAU,QAAd,eACA,yBAAKA,UAAU,OACViI,EAAkBhD,KAAI,SAACjB,EAASuB,GAAV,OACnB,yBAAKmC,IAAKnC,EAAKvF,UAAU,cACrB,kBAAC,EAAD,CAAMgE,QAASA,W,QCpCxBoE,EAlBM,SAAC,GAAD,IAAaC,EAAb,EAAEC,UAAyBC,EAA3B,oCACjB,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAAAC,GAAK,OACT5J,IACI,kBAACwJ,EAAcI,GAEf,kBAAC,IAAD,CACIvI,GAAI,CACAX,SAAU,UACVmJ,MAAM,CAAE3D,KAAM0D,EAAMnJ,kBCqF7BqJ,EA5FG,WAAO,IAAD,EACUjJ,mBAAS,IADnB,mBACbN,EADa,KACJwJ,EADI,OAG+B/J,IAH/B,IAGZuB,KAAQuD,EAHI,EAGJA,IAAKlC,EAHD,EAGCA,KAAMC,EAHP,EAGOA,MAAOrB,EAHd,EAGcA,KAAOwI,EAHrB,EAGqBA,MAEnCC,EAAO,SAACC,EAAQF,IC+BQ,SAACE,EAAQF,GACvC,OAAOnI,MAAM,GAAD,OAAI/B,EAAJ,2BAA0BoK,GAAU,CAC5CpI,OAAQ,MACR4B,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBwG,cAAc,UAAD,OAAYH,MAG5BjI,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OD1C1BgI,CAAmBF,EAAQF,GAC1BjI,MAAK,SAAAgC,GACCA,EAAKf,MACJf,QAAQC,IAAI6B,EAAKf,OAEjB+G,EAAWhG,OAKvB/C,qBAAU,WACNiJ,EAAKnF,EAAKkF,KACX,IAuDH,OACI,kBAAC,EAAD,CACIxH,MAAM,YACNC,YAAW,iBAAYG,EAAZ,KACXzB,UAAU,mBAEV,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SA1DnB,yBAAKA,UAAU,QACX,wBAAIA,UAAU,eAAd,cACA,wBAAIA,UAAU,cACV,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,SAA9B,YAEJ,wBAAIF,UAAU,mBACV,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAE,mBAAcyD,IAA3C,sBAsDR,yBAAK3D,UAAU,SA7CnB,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eAAd,oBACA,wBAAIA,UAAU,cACV,wBAAIA,UAAU,mBAAmByB,GACjC,wBAAIzB,UAAU,mBAAmB0B,GACjC,wBAAI1B,UAAU,mBACA,IAATK,EAAa,QAAU,mBAE5B,wBAAIL,UAAU,mBAAmB6I,KAMzB,SAAAzJ,GACpB,OACI,yBAAKY,UAAU,aACX,wBAAIA,UAAU,eAAd,oBACA,wBAAIA,UAAU,cAENZ,EAAQ6F,KAAI,SAAAiE,GAAC,OACTA,EAAEC,SAASlE,KAAI,SAACjB,EAASoF,GAAV,OACX,wBAAIpJ,UAAU,kBAAkB0H,IAAK0B,GACjC,6CAAmBpF,EAAQvC,MAC3B,8CAAoBuC,EAAQ2B,OAC5B,6CAAmBE,IAAO7B,EAAQ8B,WAAWC,oBAsB5DsD,CAAgBjK,OEtEtBkK,EAlBI,SAAC,GAAD,IAAcjB,EAAd,EAAGC,UAAyBC,EAA5B,oCACf,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAAAC,GAAK,OACT5J,KAAqD,IAAhCA,IAAkBuB,KAAKC,KACxC,kBAACgI,EAAcI,GAEX,kBAAC,IAAD,CACIvI,GAAI,CACAX,SAAU,UACVmJ,MAAO,CAAE3D,KAAM0D,EAAMnJ,kBCqDlCiK,EA9DQ,WAAO,IAAD,EAC2B1K,IAD3B,IACjBuB,KAAQuD,EADS,EACTA,IAAKlC,EADI,EACJA,KAAMC,EADF,EACEA,MAAOrB,EADT,EACSA,KAAQwI,EADjB,EACiBA,MA2C1C,OACI,kBAAC,EAAD,CACIxH,MAAM,YACNC,YAAW,iBAAYG,EAAZ,KACXzB,UAAU,mBAEV,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SA9CnB,yBAAKA,UAAU,QACX,wBAAIA,UAAU,eAAd,eACA,wBAAIA,UAAU,cACV,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAE,mBAAcyD,IAA3C,mBAEJ,wBAAI3D,UAAU,mBACV,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,oBAA9B,oBAEJ,wBAAIF,UAAU,mBACV,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,mBAA9B,mBAEJ,wBAAIF,UAAU,mBACV,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,iBAA9B,gBAEJ,wBAAIF,UAAU,mBACV,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,mBAA9B,sBAiCR,yBAAKF,UAAU,SAxBnB,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eAAd,oBACA,wBAAIA,UAAU,cACV,wBAAIA,UAAU,mBAAmByB,GACjC,wBAAIzB,UAAU,mBAAmB0B,GACjC,wBAAI1B,UAAU,mBACA,IAATK,EAAa,QAAU,mBAE5B,wBAAIL,UAAU,mBAAmB6I,SCtBxCtC,EAAgB,WACzB,OAAO7F,MAAM,GAAD,OAAI/B,EAAJ,eAAsB,CAC9BgC,OAAQ,QAEXC,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OC6DfuI,EAnFK,WAAO,IAAD,EACE9J,mBAAS,IADX,mBACf+B,EADe,KACTgI,EADS,OAEI/J,oBAAS,GAFb,mBAEfmC,EAFe,KAERsG,EAFQ,OAGQzI,oBAAS,GAHjB,mBAGfoC,EAHe,KAGN4H,EAHM,OAMA7K,IAAfuB,EANe,EAMfA,KAAMyI,EANS,EAMTA,MAEP5G,EAAe,SAAA0H,GACjBxB,EAAS,IACTsB,EAAQE,EAAExH,OAAOC,QAGfC,EAAc,SAAAsH,GAChBA,EAAErH,iBACFmH,EAAQ,IACRtB,EAAS,IACTuB,GAAW,GDpBW,SAACX,EAAQF,EAAOjD,GAC1C,OAAOlF,MAAM,GAAD,OAAI/B,EAAJ,4BAA2BoK,GAAU,CAC7CpI,OAAQ,OACR4B,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBwG,cAAc,UAAD,OAAYH,IAE7BpG,KAAMxD,KAAKyD,UAAUkD,KAEpBhF,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GACHH,QAAQC,IAAIE,MCQhB2I,CAAexJ,EAAKuD,IAAKkF,EAAO,CAACpH,SAChCb,MAAK,SAAAgC,GACCA,EAAKf,MACJsG,EAASvF,EAAKf,QAEdsG,EAAS,IACTuB,GAAW,QAwCvB,OACI,kBAAC,EAAD,CACIrI,MAAM,qBACNC,YAAW,iBAAYlB,EAAKqB,KAAjB,kCACXzB,UAAU,mBAEV,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBAzCvB,0BAAMyH,SAAUpF,GACZ,yBAAKrC,UAAU,cACX,2BAAOA,UAAU,cAAjB,QACA,2BACI8C,KAAK,OACL9C,UAAU,eACVoC,MAAOX,EACPoB,SAAUZ,EACV4H,WAAS,EACTC,UAAQ,KAGhB,4BAAQ9J,UAAU,2BAAlB,oBAiBJ,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,gBAAtC,sBARU,WACd,GAAG6B,EACC,OAAO,wBAAI7B,UAAU,gBAAgByB,EAA9B,sBAoBEsI,GA5BG,WAChB,GAAGjI,EACC,OAAO,wBAAI9B,UAAU,gBAAgByB,EAA9B,gBA2BEuI,OCqINC,EAlNI,WAAO,IAAD,EACCpL,IAAfuB,EADc,EACdA,KAAMyI,EADQ,EACRA,MADQ,EAEOnJ,mBAAS,CACjC+B,KAAM,GACNH,YAAa,GACbqE,MAAO,GACPkB,WAAY,GACZjB,SAAU,GACVsE,SAAU,GACVlE,SAAU,GACVmE,MAAO,GACPjH,SAAS,EACTrB,MAAO,GACPuI,eAAgB,GAChBC,mBAAmB,EACnBC,SAAU,KAfO,mBAEdvI,EAFc,KAENC,EAFM,KAkBjBP,EAaAM,EAbAN,KACAH,EAYAS,EAZAT,YACAqE,EAWA5D,EAXA4D,MACAkB,EAUA9E,EAVA8E,WAGAb,GAOAjE,EATA6D,SASA7D,EARAmI,SAQAnI,EAPAiE,UAEA9C,GAKAnB,EANAoI,MAMApI,EALAmB,SACArB,EAIAE,EAJAF,MACAuI,EAGArI,EAHAqI,eAEAE,GACAvI,EAFAsI,kBAEAtI,EADAuI,UAmBJzK,qBAAU,WAdN0G,IAAgB3F,MAAK,SAAAgC,GACbA,EAAKf,MACLG,EAAU,2BAAKD,GAAN,IAAcF,MAAOe,EAAKf,SAEnCG,EAAU,2BACHD,GADE,IAEL8E,WAAYjE,EACZ0H,SAAU,IAAIC,iBAS3B,IAEH,IAAMtI,EAAe,SAAAR,GAAI,OAAI,SAAAS,GAAU,IAAD,EAC5BE,EAAiB,UAATX,EACRS,EAAMC,OAAOqI,MAAM,GACnBtI,EAAMC,OAAOC,MAEnBkI,EAASG,IAAIhJ,EAAMW,GACnBJ,EAAU,2BAAID,GAAL,uBAAcN,EAAOW,GAArB,uBAAmC,GAAnC,OAGPC,EAAc,SAAAH,GAChBA,EAAMI,iBACNN,EAAU,2BAAKD,GAAN,IAAcF,OAAO,EAAOqB,SAAS,KFpCzB,SAAC6F,EAAQF,EAAO7E,GACzC,OAAOtD,MAAM,GAAD,OAAI/B,EAAJ,2BAA0BoK,GAAU,CAC5CpI,OAAQ,OACR4B,QAAS,CACLC,OAAQ,mBACRwG,cAAc,UAAD,OAAYH,IAE7BpG,KAAMuB,IAELpD,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GACHH,QAAQC,IAAIE,MEyBhByJ,CAActK,EAAKuD,IAAKkF,EAAOyB,GAC9B1J,MAAK,SAAAgC,GACCA,EAAKf,MACJG,EAAU,2BAAID,GAAL,IAAaF,MAAOe,EAAKf,SAElCG,EAAU,2BACHD,GADE,IAELN,KAAM,GACNH,YAAa,GACbqE,MAAO,GACPK,SAAU,GACVmE,MAAO,GACPjH,SAAS,EACTkH,eAAgBxH,EAAKnB,YAiHrC,OACI,kBAAC,EAAD,CACIJ,MAAM,oBACNC,YAAW,iBAAYlB,EAAKqB,KAAjB,kCACXzB,UAAU,mBAEV,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBAdvBkD,GACI,yBAAKlD,UAAU,uBACX,2CApBR,yBACIA,UAAU,0BACVC,MAAO,CAAE+C,QAASnB,EAAQ,GAAK,SAE9BA,GAKL,yBACI7B,UAAU,wBACVC,MAAO,CAAE+C,QAASoH,EAAiB,GAAK,SAExC,sCAAQA,GAAR,iBA9FJ,0BAAMpK,UAAU,OAAOyH,SAAUpF,GAC7B,0CACA,yBAAKrC,UAAU,cACX,2BAAOA,UAAU,qBACb,2BACI6C,SAAUZ,EAAa,SACvBa,KAAK,OACLrB,KAAK,QACLkJ,OAAO,cAKnB,yBAAK3K,UAAU,cACX,uCACA,2BACI6C,SAAUZ,EAAa,QACvBa,KAAK,OACL9C,UAAU,eACVoC,MAAOX,KAIf,yBAAKzB,UAAU,cACX,8CACA,8BACI6C,SAAUZ,EAAa,eACvBjC,UAAU,eACVoC,MAAOd,KAIf,yBAAKtB,UAAU,cACX,wCACA,2BACI6C,SAAUZ,EAAa,SACvBa,KAAK,SACL9C,UAAU,eACVoC,MAAOuD,KAIf,yBAAK3F,UAAU,cACX,2CACA,4BACI6C,SAAUZ,EAAa,YACvBjC,UAAU,gBAEV,iDACC6G,GAAcA,EAAW5B,KAAI,SAACW,EAAUL,GAAX,OAC1B,4BAAQmC,IAAKnC,EAAKnD,MAAOwD,EAASjC,KAAMiC,EAASnE,WAK7D,yBAAKzB,UAAU,cACX,2CACA,4BACI6C,SAAUZ,EAAa,YACvBjC,UAAU,gBAEV,iDACA,4BAAQoC,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,SAIR,yBAAKpC,UAAU,cACX,2CACA,2BACI6C,SAAUZ,EAAa,YACvBa,KAAK,SACL9C,UAAU,eACVoC,MAAO4D,KAGf,4BAAQhG,UAAU,2BAAlB,uBCkFG4K,EAnPO,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EACPhM,IAAhBuB,EADuB,EACvBA,KAAMyI,EADiB,EACjBA,MADiB,EAEHnJ,mBAAS,CACjC+B,KAAM,GACNH,YAAa,GACbqE,MAAO,GACPkB,WAAY,GACZjB,SAAU,GACVsE,SAAU,GACVlE,SAAU,GACVmE,MAAO,GACPjH,SAAS,EACTrB,MAAO,GACPuI,eAAgB,GAChBC,mBAAmB,EACnBC,SAAU,KAfiB,mBAExBvI,EAFwB,KAEhBC,EAFgB,KAkB3BP,EAaAM,EAbAN,KACAH,EAYAS,EAZAT,YACAqE,EAWA5D,EAXA4D,MACAkB,EAUA9E,EAVA8E,WAGAb,GAOAjE,EATA6D,SASA7D,EARAmI,SAQAnI,EAPAiE,UAEA9C,GAKAnB,EANAoI,MAMApI,EALAmB,SACArB,EAIAE,EAJAF,MACAuI,EAGArI,EAHAqI,eACAC,EAEAtI,EAFAsI,kBACAC,EACAvI,EADAuI,SAGExB,EAAO,SAAAxD,IHwFS,SAAAA,GACtB,OAAO5E,MAAM,GAAD,OAAI/B,EAAJ,oBAAmB2G,GAAa,CACxC3E,OAAQ,QAEPC,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OG9F1B6J,CAAWxF,GACN1E,MAAK,SAAAgC,GACCA,EAAKf,MACJG,EAAU,2BAAKD,GAAN,IAAcF,MAAOe,EAAKf,UAGnCG,EAAU,2BACHD,GADE,IAELN,KAAMmB,EAAKnB,KACXH,YAAasB,EAAKtB,YAClBqE,MAAO/C,EAAK+C,MACZC,SAAUhD,EAAKgD,SAASjC,IACxBuG,SAAUtH,EAAKsH,SACflE,SAAUpD,EAAKoD,SACfsE,SAAU,IAAIC,YAGlBQ,SAMVA,EAAiB,WACnBxE,IAAgB3F,MAAK,SAAAgC,GACbA,EAAKf,MACLG,EAAU,2BAAKD,GAAN,IAAcF,MAAOe,EAAKf,SAEnCG,EAAU,CACN6E,WAAYjE,EACZ0H,SAAU,IAAIC,eAO9B1K,qBAAU,WACNiJ,EAAK+B,EAAM1D,OAAO7B,aACnB,IAEH,IAAMrD,EAAe,SAAAR,GAAI,OAAI,SAAAS,GAAU,IAAD,EAC5BE,EAAiB,UAATX,EACRS,EAAMC,OAAOqI,MAAM,GACnBtI,EAAMC,OAAOC,MAEnBkI,EAASG,IAAIhJ,EAAMW,GACnBJ,EAAU,2BAAKD,GAAN,uBAAeN,EAAOW,GAAtB,uBAAoC,GAApC,OAGPC,EAAc,SAAAH,GAChBA,EAAMI,iBACNN,EAAU,2BAAKD,GAAN,IAAcF,OAAO,EAAOqB,SAAS,KH6CzB,SAACoC,EAAWyD,EAAQF,EAAO7E,GACpD,OAAOtD,MAAM,GAAD,OAAI/B,EAAJ,oBAAmB2G,EAAnB,YAAgCyD,GAAU,CAClDpI,OAAQ,MACR4B,QAAS,CACLC,OAAQ,mBACRwG,cAAc,UAAD,OAAYH,IAE7BpG,KAAMuB,IAELpD,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MGvD1B+J,CAAcH,EAAM1D,OAAO7B,UAAWlF,EAAKuD,IAAKkF,EAAOyB,GAClD1J,MAAK,SAAAgC,GACEA,EAAKf,MACLG,EAAU,2BAAKD,GAAN,IAAcF,MAAOe,EAAKf,SAEnCG,EAAU,2BACHD,GADE,IAELN,KAAM,GACNH,YAAa,GACbqE,MAAO,GACPK,SAAU,GACVmE,MAAO,GACPjH,SAAS,EACTmH,mBAAmB,EACnBxI,OAAO,EACPuI,eAAgBxH,EAAKnB,YAyHzC,OACI,kBAAC,EAAD,CACIJ,MAAM,oBACNC,YAAW,iBAAYlB,EAAKqB,KAAjB,kCACXzB,UAAU,mBAEV,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBAtBvBkD,GACI,yBAAKlD,UAAU,uBACX,2CApBR,yBACIA,UAAU,0BACVC,MAAO,CAAE+C,QAASnB,EAAQ,GAAK,SAE9BA,GAKL,yBACI7B,UAAU,wBACVC,MAAO,CAAE+C,QAASoH,EAAiB,GAAK,SAExC,sCAAQA,GAAR,iBA9FJ,0BAAMpK,UAAU,OAAOyH,SAAUpF,GAC7B,0CACA,yBAAKrC,UAAU,cACX,2BAAOA,UAAU,qBACb,2BACI6C,SAAUZ,EAAa,SACvBa,KAAK,OACLrB,KAAK,QACLkJ,OAAO,cAKnB,yBAAK3K,UAAU,cACX,uCACA,2BACI6C,SAAUZ,EAAa,QACvBa,KAAK,OACL9C,UAAU,eACVoC,MAAOX,KAIf,yBAAKzB,UAAU,cACX,8CACA,8BACI6C,SAAUZ,EAAa,eACvBjC,UAAU,eACVoC,MAAOd,KAIf,yBAAKtB,UAAU,cACX,wCACA,2BACI6C,SAAUZ,EAAa,SACvBa,KAAK,SACL9C,UAAU,eACVoC,MAAOuD,KAIf,yBAAK3F,UAAU,cACX,2CACA,4BACI6C,SAAUZ,EAAa,YACvBjC,UAAU,gBAEV,iDACC6G,GAAcA,EAAW5B,KAAI,SAACW,EAAUL,GAAX,OAC1B,4BAAQmC,IAAKnC,EAAKnD,MAAOwD,EAASjC,KAAMiC,EAASnE,WAK7D,yBAAKzB,UAAU,cACX,2CACA,4BACI6C,SAAUZ,EAAa,YACvBjC,UAAU,gBAEV,iDACA,4BAAQoC,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,SAIR,yBAAKpC,UAAU,cACX,2CACA,2BACI6C,SAAUZ,EAAa,YACvBa,KAAK,SACL9C,UAAU,eACVoC,MAAO4D,KAGf,4BAAQhG,UAAU,2BAAlB,mBA8Ba,WACjB,GAAGqK,IACKxI,EACA,OAAO,kBAAC,IAAD,CAAU3B,GAAG,MAiBf+K,OC5GNC,EA/HA,WAAO,IAAD,EACWxL,mBAAS,IADpB,mBACVyL,EADU,KACFC,EADE,OAEuB1L,mBAAS,IAFhC,mBAEV2L,EAFU,KAEIC,EAFJ,OAIOzM,IAAhBuB,EAJS,EAITA,KAAMyI,EAJG,EAIHA,MAER0C,EAAa,YJqCG,SAACxC,EAAQF,GAC/B,OAAOnI,MAAM,GAAD,OAAI/B,EAAJ,uBAAsBoK,GAAU,CACxCpI,OAAQ,MACR4B,QAAS,CACLC,OAAQ,mBACRwG,cAAc,UAAD,OAAYH,MAG5BjI,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OI/C1BuK,CAAWpL,EAAKuD,IAAKkF,GAAOjI,MAAK,SAAAgC,GACzBA,EAAKf,MACLf,QAAQC,IAAI6B,EAAKf,OAEjBuJ,EAAUxI,OAKhB6I,EAAmB,YJyCE,SAAC1C,EAAQF,GACpC,OAAOnI,MAAM,GAAD,OAAI/B,EAAJ,gCAA+BoK,GAAU,CACjDpI,OAAQ,MACR4B,QAAS,CACLC,OAAQ,mBACRwG,cAAc,UAAD,OAAYH,MAG5BjI,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OInD1ByK,CAAgBtL,EAAKuD,IAAKkF,GAAOjI,MAAK,SAAAgC,GAC9BA,EAAKf,MACLf,QAAQC,IAAI6B,EAAKf,OAEjByJ,EAAgB1I,OAK5B/C,qBAAU,WACN0L,IACAE,MACD,IAEH,IAUME,EAAY,SAACjE,EAAKtF,GAAN,OACd,yBAAKpC,UAAU,4BACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBAAoB0H,IAEvC,2BAAO5E,KAAK,OAAOV,MAAOA,EAAOpC,UAAU,eAAe4L,UAAQ,MAIpEC,EAAqB,SAAClC,EAAGmC,IJqBF,SAAC/C,EAAQF,EAAOiD,EAASC,GACtD,OAAOrL,MAAM,GAAD,OAAI/B,EAAJ,kBAAiBmN,EAAjB,mBAAmC/C,GAAU,CACrDpI,OAAQ,MACR4B,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBwG,cAAc,UAAD,OAAYH,IAE7BpG,KAAMxD,KAAKyD,UAAU,CAAEqJ,SAAQD,cAE9BlL,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OIjC1B+K,CAAkB5L,EAAKuD,IAAKkF,EAAOiD,EAASnC,EAAExH,OAAOC,OACpDxB,MAAK,SAAAgC,GACCA,EAAKf,MACJf,QAAQC,IAAI6B,EAAKf,OAEjB0J,QAoBZ,OACI,kBAAC,EAAD,CACIlK,MAAM,SACNC,YAAW,iBAAYlB,EAAKqB,KAAjB,yCACXzB,UAAU,mBAEV,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBAnDpBmL,EAAOhL,OAAS,EAEX,wBAAIH,UAAU,yBAAd,iBAAqDmL,EAAOhL,QAGzD,wBAAIH,UAAU,eAAd,aAgDEmL,EAAOlG,KAAI,SAACgH,EAAOC,GAAR,OACR,yBACIlM,UAAU,OACV0H,IAAKwE,EACLjM,MAAO,CAACkM,aAAc,qBAEtB,wBAAInM,UAAU,QACV,0BAAMA,UAAU,cAAhB,aAAwCiM,EAAMtI,MAGlD,wBAAI3D,UAAU,mBACV,wBAAIA,UAAU,mBAnCvB,SAAAiM,GAAK,OACpB,yBAAKjM,UAAU,cACX,wBAAIA,UAAU,aAAd,WAAmCiM,EAAMF,QACzC,4BACI/L,UAAU,eACV6C,SAAU,SAAA8G,GAAC,OAAIkC,EAAmBlC,EAAGsC,EAAMtI,OAE3C,iDACC0H,EAAapG,KAAI,SAAC8G,EAAQK,GAAT,OACd,4BAAQ1E,IAAK0E,EAAOhK,MAAO2J,GAASA,QA0BSM,CAAWJ,IAC5C,wBAAIjM,UAAU,mBAAd,mBAAiDiM,EAAMF,QACvD,wBAAI/L,UAAU,mBAAd,WAAyCiM,EAAMK,QAC/C,wBAAItM,UAAU,mBAAd,eAA6CiM,EAAM7L,KAAKqB,MACxD,wBAAIzB,UAAU,mBAAd,eAA6C6F,IAAOoG,EAAMnG,WAAWC,WACrE,wBAAI/F,UAAU,mBAAd,qBAAmDiM,EAAMM,UAE7D,wBAAIvM,UAAU,yBAAd,gCACkCiM,EAAM9C,SAAShJ,QAGhD8L,EAAM9C,SAASlE,KAAI,SAACjB,EAASoF,GAAV,OAChB,yBACIpJ,UAAU,OACV0H,IAAK0B,EACLnJ,MAAO,CAACuM,QAAS,OAAQ5E,OAAQ,qBAEhC+D,EAAU,eAAgB3H,EAAQvC,MAClCkK,EAAU,gBAAiB3H,EAAQ2B,OACnCgG,EAAU,gBAAiB3H,EAAQW,OACnCgH,EAAU,aAAc3H,EAAQL,iB,QCzFtD8I,EAjCE,SAAC,GAAmC,IAAjC5F,EAAgC,EAAhCA,WAAY6F,EAAoB,EAApBA,cAAoB,EAClBhN,mBAAS,IADS,mBACzCiN,EADyC,KAChCC,EADgC,KAG1CC,EAAe,SAAAjH,GAAQ,OAAI,WAE7B,IAAMkH,EAAoBH,EAAQI,QAAQnH,GACpCoH,EAAoB,YAAOL,IAGP,IAAvBG,EACCE,EAAqB7L,KAAKyE,GAE1BoH,EAAqB9G,OAAO4G,EAAmB,GAEnDF,EAAWI,GACXN,EAAcM,KAGlB,OAAOnG,EAAW5B,KAAI,SAACW,EAAUL,GAAX,OAClB,wBAAIvF,UAAU,gBAAgB0H,IAAKnC,GAC/B,2BACIzC,KAAK,WACL9C,UAAU,mBACV6C,SAAUgK,EAAajH,EAASjC,KAChCvB,MAAOuK,EAAQI,SAA0B,IAAlBnH,EAASjC,OAEpC,2BAAO3D,UAAU,oBACZ4F,EAASnE,WCHXwL,EAxBE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQR,EAAoB,EAApBA,cAAoB,EAClBhN,mBAAS,GADS,mBAC9ByN,GAD8B,WAGtClL,EAAe,SAAAC,GACjBwK,EAAcxK,EAAMC,OAAOC,OAC3B+K,EAASjL,EAAMC,OAAOC,QAG1B,OAAO8K,EAAOjI,KAAI,SAACU,EAAOJ,GAAR,OACd,yBAAKmC,IAAKnC,GACN,2BACIzC,KAAK,QACL9C,UAAU,YACV6C,SAAUZ,EACVR,KAAMkE,EACNvD,MAAK,UAAKuD,EAAMhC,OAEpB,2BAAO3D,UAAU,oBACZ2F,EAAMlE,WCpBVyL,EAAQ,CACjB,CACIvJ,IAAK,EACLlC,KAAM,MACN2L,MAAO,IAEX,CACIzJ,IAAK,EACLlC,KAAM,WACN2L,MAAO,CAAC,EAAG,IAEf,CACIzJ,IAAK,EACLlC,KAAM,aACN2L,MAAO,CAAC,GAAI,KAEhB,CACIzJ,IAAK,EACLlC,KAAM,aACN2L,MAAO,CAAC,GAAI,KAEhB,CACIzJ,IAAK,EACLlC,KAAM,aACN2L,MAAO,CAAC,GAAI,KAEhB,CACIzJ,IAAK,EACLlC,KAAM,gBACN2L,MAAO,CAAC,GAAI,MCyHLC,EA7IF,WAAO,IAAD,EACmB3N,mBAAS,CACvCiH,QAAS,CAAEf,SAAU,GAAID,MAAO,MAFrB,mBACR2H,EADQ,KACGC,EADH,OAIqB7N,mBAAS,IAJ9B,mBAIRmH,EAJQ,KAII2G,EAJJ,OAKW9N,oBAAS,GALpB,mBAKDyI,GALC,aAMWzI,mBAAS,GANpB,mBAMRgH,EANQ,aAOShH,mBAAS,IAPlB,mBAOR+G,EAPQ,KAOFgH,EAPE,OAQS/N,mBAAS,GARlB,mBAQRgO,EARQ,KAQFC,EARE,OAS6BjO,mBAAS,IATtC,mBASRkO,EATQ,KASQC,EATR,KAqBTC,EAAsB,SAAAC,GAExBvH,EAAmBC,EAAMC,EAAOqH,GAC3BnN,MAAK,SAAAgC,GACCA,EAAKf,MACJsG,EAASvF,EAAKf,QAEdgM,EAAkBjL,EAAKA,MACvB+K,EAAQ/K,EAAK8K,MACbD,EAAQ,QAKlBO,EAAW,SAAAD,GACb,IAAIE,EAASxH,EAAOC,EAEpBF,EAAmByH,EAAQvH,EAAOqH,EAAWpH,SACxC/F,MAAK,SAAAgC,GACEA,EAAKf,MACLsG,EAASvF,EAAKf,QAEdgM,EAAkB,GAAD,mBAAKD,GAAL,YAAwBhL,EAAKA,QAC9C+K,EAAQ/K,EAAK8K,MACbD,EAAQQ,QAkBxBpO,qBAAU,WAnDN0G,IAAgB3F,MAAK,SAAAgC,GACbA,EAAKf,MACLsG,EAASvF,EAAKf,OAEd2L,EAAc5K,MAiDtBkL,EAAoBR,EAAU3G,WAC/B,IAEH,IAAM+F,EAAgB,SAAC/F,EAASuH,GAE5B,IAAMH,EAAU,eAAOT,GAGvB,GAFAS,EAAWpH,QAAQuH,GAAYvH,EAEf,UAAbuH,EAAsB,CACrB,IAAIC,EAAcC,EAAYzH,GAC9BoH,EAAWpH,QAAQuH,GAAYC,EAEnCL,EAAoBR,EAAU3G,SAC9B4G,EAAaQ,IAGXK,EAAc,SAAAhM,GAChB,IAAMQ,EAAOsK,EAUP3H,EAAM3C,EAAKyL,WAAU,SAAAC,GAAC,OAAIA,EAAE3K,MAAQ4K,SAASnM,MACnD,OAAOQ,EAAK2C,GAAK6H,OAGrB,OACI,kBAAC,EAAD,CACI/L,MAAM,YACNC,YAAY,sCACZtB,UAAU,mBAEd,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,oDACA,4BACI,kBAAC,EAAD,CACI6G,WAAYA,EACZ6F,cAAe,SAAA/F,GAAO,OAClB+F,EAAc/F,EAAS,gBAKnC,qDACA,6BACI,kBAAC,EAAD,CACIuG,OAAQA,EACRR,cAAe,SAAA/F,GAAO,OAClB+F,EAAc/F,EAAS,cAKnC,yBAAK3G,UAAU,SACX,wBAAIA,UAAU,QAAd,YACA,yBAAKA,UAAU,OACV4N,EAAe3I,KAAI,SAACjB,EAASuB,GAAV,OAChB,yBAAKmC,IAAKnC,EAAKvF,UAAU,cACrB,kBAAC,EAAD,CAAM0H,IAAKnC,EAAKvB,QAASA,SAIrC,6BAjFR0J,EAAO,GAAKA,GAAQhH,GAChB,4BACI1G,UAAU,uBACVO,QAASyN,GAFb,iBCGDQ,EA1DC,SAAA/F,GAAU,IAAD,EACS/I,mBAAS,IADlB,mBACdsE,EADc,KACLyK,EADK,OAEuB/O,mBAAS,IAFhC,mBAEdgP,EAFc,KAEEC,EAFF,OAGKjP,oBAAS,GAHd,mBAGPyI,GAHO,WAKfyG,EAAoB,SAAAtJ,IjBgDV,SAAAA,GAChB,OAAO5E,MAAM,GAAD,OAAI/B,EAAJ,oBAAmB2G,GAAa,CACxC3E,OAAQ,QAEPC,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OiBtD1B4N,CAAKvJ,GACA1E,MAAK,SAAAgC,GACCA,EAAKf,MACJsG,EAASvF,EAAKf,QAEd4M,EAAW7L,GjBoDJ,SAAA0C,GACvB,OAAO5E,MAAM,GAAD,OAAI/B,EAAJ,6BAA4B2G,GAAa,CACjD3E,OAAQ,QAEPC,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MiBzDd6N,CAAYlM,EAAKe,KACZ/C,MAAK,SAAAgC,GACCA,EAAKf,MACJsG,EAASvF,EAAKf,OAEd8M,EAAkB/L,WAY9C,OALA/C,qBAAU,WACN,IAAMyF,EAAYmD,EAAMoC,MAAM1D,OAAO7B,UACrCsJ,EAAkBtJ,KACnB,CAACmD,IAGA,kBAAC,EAAD,CACIpH,MAAO2C,GAAWA,EAAQvC,KAC1BH,YACI0C,GACAA,EAAQ1C,aACR0C,EAAQ1C,YAAYoE,UAAU,EAAE,KAEpC1F,UAAU,mBAEV,wBAAIA,UAAU,QAAQgE,EAAQvC,MAC9B,yBAAKzB,UAAU,OACX,yBAAKA,UAAU,SACVgE,GAAWA,EAAQ1C,aAChB,kBAAC,EAAD,CAAM0C,QAASA,EAASC,uBAAuB,KAGvD,yBAAKjE,UAAU,SACX,gDACC0O,EAAezJ,KAAI,SAACjB,EAASuB,GAAV,OAChB,kBAAC,EAAD,CAAMmC,IAAKnC,EAAKvB,QAASA,W,iBCyJlC+K,EA1ME,SAAC,GAAoD,IAAlD5F,EAAiD,EAAjDA,SAAiD,IAAvC9E,cAAuC,MAA9B,SAAAC,GAAC,OAAIA,GAAyB,MAAtBC,WAAsB,WAAhBC,EAAgB,IACzC9E,mBAAS,CAC7BwD,SAAS,EACTpB,SAAS,EACTkN,YAAa,KACbnN,MAAO,GACPoN,SAAU,GACV1C,QAAS,KAPoD,mBAC1D3J,EAD0D,KACpDqE,EADoD,KAU3D8B,EAASlK,KAAqBA,IAAkBuB,KAAKuD,IACrDkF,EAAQhK,KAAqBA,IAAkBgK,MAG/CqG,EAAW,SAACnG,EAAQF,IlB0DS,SAACE,EAAQF,GAC5C,OAAOnI,MAAM,GAAD,OAAI/B,EAAJ,+BAA8BoK,GAAU,CAChDpI,OAAQ,MACR4B,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBwG,cAAc,UAAD,OAAYH,MAI5BjI,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OkBtE1BkO,CAAwBpG,EAAQF,GAC3BjI,MAAK,SAAAgC,GACCA,EAAKf,MACJoF,EAAQ,2BACDrE,GADA,IAEHf,MAAOe,EAAKf,SAGhBoF,EAAQ,CACJ+H,YAAapM,EAAKoM,kBAMhCI,EAAgB,SAAAlN,GAClB+E,EAAQ,2BACDrE,GADA,IAEH2J,QAASrK,EAAMC,OAAOC,UAI9BvC,qBAAU,WACNqP,EAASnG,EAAQF,KAClB,IAEH,IAuIoB/G,EATFD,EA9HZwN,EAAW,WAIb,OAHclG,EAASmG,QAAO,SAACC,EAAcC,GACzC,OAAOD,EAAeC,EAAU7K,MAAQ6K,EAAU7J,QACnD,GACU8J,QAAQ,IAerBC,EAAkB9M,EAAK2J,QAErBoD,EAAM,WACR1I,EAAQ,CAAE/D,SAAS,IAIJN,EAAKqM,SAASW,uBACxBhP,MAAK,SAAAgC,GAMF,IAAMiN,EAAc,CAChBC,mBANIlN,EAAKmN,MAOTzD,OAAQ+C,MlBYE,SAACtG,EAAQF,EAAOgH,GAC1C,OAAOnP,MAAM,GAAD,OAAI/B,EAAJ,8BAA6BoK,GAAU,CAC/CpI,OAAQ,OACR4B,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBwG,cAAc,UAAD,OAAYH,IAE7BpG,KAAMxD,KAAKyD,UAAUmN,KAGpBjP,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OkBxBlB+O,CAAejH,EAAQF,EAAOgH,GACzBjP,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZoG,EAAQ,2BACDpG,GADA,IAEHiB,SAAS,KAIb,IAAMmO,EAAkB,CACpB9G,SAAUA,EACV+G,eAAgBrP,EAASsP,YAAYhL,GACrCmH,OAAQzL,EAASsP,YAAY7D,OAC7BC,QAASmD,IlBcV,SAAC3G,EAAQF,EAAOoH,GACvC,OAAOvP,MAAM,GAAD,OAAI/B,EAAJ,yBAAwBoK,GAAU,CAC1CpI,OAAQ,OACR4B,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBwG,cAAc,UAAD,OAAYH,IAE7BpG,KAAMxD,KAAKyD,UAAU,CAACuJ,MAAOgE,MAG5BrP,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OkBzBVmP,CAAYrH,EAAQF,EAAOoH,GACtBrP,MAAK,SAAAC,GxBrBT,IAAAL,IwBuBiB,WACN6D,GAAQE,GACR0C,EAAQ,CACJ/D,SAAS,EACTpB,SAAS,IAEbhB,QAAQC,IAAI,mCxB5BvB,qBAAXjC,SACNC,aAAa0B,WAAW,QACxBD,QwB8BqBQ,OAAM,SAAAa,GACHf,QAAQC,IAAIc,GACZoF,EAAQ,CAAE/D,SAAS,UAG9BlC,OAAM,SAAAa,GACHoF,EAAQ,CAAE/D,SAAS,IACnBpC,QAAQC,IAAIc,SAGvBb,OAAM,SAAAa,GAEHoF,EAAQ,2BACDrE,GADA,IAEHf,MAAOA,EAAMwO,eAKvBC,EAAa,kBACf,yBACIC,OAAQ,kBAAMtJ,EAAQ,2BACfrE,GADc,IAEjBf,MAAO,QAGW,OAArBe,EAAKoM,aAAwB7F,EAAShJ,OAAS,EAExC,6BACI,yBAAKH,UAAU,mBACX,2BAAOA,UAAU,cAAjB,sBACA,8BACI6C,SAAUuM,EACVpP,UAAU,eACVoC,MAAOQ,EAAK2J,QACZ5E,YAAY,wCAGpB,kBAAC,IAAD,CACI6I,QAAS,CACLC,cAAe7N,EAAKoM,YACpB0B,OAAQ,CACJC,KAAM,UAGdC,WAAY,SAAA3B,GAAQ,OAAKrM,EAAKqM,SAAWA,KAE7C,4BACIjP,UAAU,4BACVO,QAAS,kBAAMoP,MAFnB,aAQN,OA6Bd,OACI,6BACI,uCAAaN,KACAzM,EAAKM,SAPlB,2CApBUrB,EA4BCe,EAAKf,MA3BpB,yBACI7B,UAAU,qBACVC,MAAO,CAAE+C,QAASnB,EAAQ,GAAK,SAE9BA,KAIWC,EAoBCc,EAAKd,QAnBtB,yBACI9B,UAAU,mBACVC,MAAO,CAAE+C,QAASlB,EAAU,GAAK,SAFrC,2CAhIAjD,IACI,6BAAMyR,KAEF,kBAAC,IAAD,CAAMpQ,GAAG,WACL,4BAAQF,UAAU,mBAAlB,0BCQL6Q,EA7DF,WAAO,IAAD,EACWnR,mBAAS,IADpB,mBACRoR,EADQ,KACDC,EADC,OAEOrR,oBAAS,GAFhB,mBAER6E,EAFQ,KAEHF,EAFG,KAIfxE,qBAAU,WACNkR,EzB0BkB,qBAAXjS,QACHC,aAAaC,QAAQ,QACdC,KAAKC,MAAMH,aAAaC,QAAQ,SAGxC,MyB9BJ,CAACuF,IA+BJ,OACI,kBAAC,EAAD,CACIlD,MAAM,gBACNC,YAAY,kEACZtB,UAAU,mBAEV,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACV8Q,EAAM3Q,OAAS,EArCd,SAAA2Q,GACd,OACI,6BACI,uDAAsBA,EAAM3Q,OAA5B,WAEA,6BACC2Q,EAAM7L,KAAI,SAACjB,EAASuB,GAAV,OACP,kBAAC,EAAD,CACImC,IAAKnC,EACLvB,QAASA,EACTE,qBAAqB,EACrBC,YAAY,EACZC,yBAAyB,EACzBC,OAAQA,EACRE,IAAKA,QAuBWyM,CAAUF,GAf1C,kDAEI,6BACA,kBAAC,IAAD,CAAM5Q,GAAG,SAAT,wBAcI,yBAAKF,UAAU,SACX,wBAAIA,UAAU,QAAd,qBACA,kBAAC,EAAD,CACImJ,SAAU2H,EACVzM,OAAQA,EACRE,IAAKA,QC6Dd0M,EAlHC,SAAC,GAAa,IAAZpG,EAAW,EAAXA,MAAW,EACGnL,mBAAS,CACjC+B,KAAM,GACNC,MAAO,GACPC,SAAU,GACVE,MAAO,GACPC,SAAS,IANY,mBAClBC,EADkB,KACVC,EADU,KASjBP,EAA0CM,EAA1CN,KAAMC,EAAoCK,EAApCL,MAAOC,EAA6BI,EAA7BJ,SAAiBG,GAAYC,EAAnBF,MAAmBE,EAAZD,SAC9B+G,EAAUhK,IAAVgK,MAEFC,EAAO,SAAAC,IfjBG,SAACA,EAAQF,GACzB,OAAOnI,MAAM,GAAD,OAAI/B,EAAJ,iBAAgBoK,GAAU,CAClCpI,OAAQ,MACR4B,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBwG,cAAc,UAAD,OAAYH,MAG5BjI,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OeO1B4N,CAAK9F,EAAQF,GACRjI,MAAK,SAAAgC,GACCA,EAAKf,MACJG,EAAU,2BACHD,GADE,IAELF,OAAO,KAGXG,EAAU,2BACHD,GADE,IAELN,KAAMmB,EAAKnB,KACXC,MAAOkB,EAAKlB,aAMhC7B,qBAAU,WACNiJ,EAAK+B,EAAM1D,OAAO4B,UACnB,IAEH,IAAM9G,EAAe,SAAAR,GAAI,OAAI,SAAAkI,GACzB3H,EAAU,2BACHD,GADE,gBAELF,OAAO,GACNJ,EAAOkI,EAAExH,OAAOC,WAInBC,EAAc,SAAAsH,GAChBA,EAAErH,iBflCY,SAACyG,EAAQF,EAAOzI,GAClC,OAAOM,MAAM,GAAD,OAAI/B,EAAJ,iBAAgBoK,GAAU,CAClCpI,OAAQ,MACR4B,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBwG,cAAc,UAAD,OAAYH,IAE7BpG,KAAMxD,KAAKyD,UAAUtC,KAEpBQ,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MesB1BiQ,CAAOrG,EAAM1D,OAAO4B,OAAQF,EAAO,CAAEpH,OAAMC,QAAOC,aAAYf,MAAK,SAAAgC,GAC3DA,EAAKf,MAELsP,MAAMvO,EAAKf,OftBD,SAACzB,EAAMI,GAC7B,GAAqB,qBAAX1B,QACHC,aAAaC,QAAQ,OAAQ,CAC5B,IAAIoS,EAAOnS,KAAKC,MAAMH,aAAaC,QAAQ,QAC3CoS,EAAKhR,KAAMA,EACXrB,aAAasE,QAAQ,MAAOpE,KAAKyD,UAAU0O,IAC3C5Q,KekBI6Q,CAAWzO,GAAM,WACbZ,EAAU,2BACHD,GADE,IAELN,KAAMmB,EAAKnB,KACXC,MAAOkB,EAAKlB,MACZI,SAAS,YA8C7B,OACI,kBAAC,EAAD,CACIT,MAAM,eACNC,YAAY,sBACZtB,UAAU,mBAEV,wBAAIA,UAAU,QAAd,WAvCc,SAACyB,EAAMC,EAAOC,GAAd,OAClB,8BACI,yBAAK3B,UAAU,cACX,2BAAOA,UAAU,cAAjB,QACA,2BACI8C,KAAK,OACL9C,UAAU,eACVoC,MAAOX,EACPoB,SAAUZ,EAAa,WAG/B,yBAAKjC,UAAU,cACX,2BAAOA,UAAU,cAAjB,SACA,2BACI8C,KAAK,QACL9C,UAAU,eACVoC,MAAOV,EACPmB,SAAUZ,EAAa,YAG/B,yBAAKjC,UAAU,cACX,2BAAOA,UAAU,cAAjB,YACA,2BACI8C,KAAK,YACL9C,UAAU,eACVoC,MAAOT,EACPkB,SAAUZ,EAAa,eAG/B,4BAAQjC,UAAU,kBAAkBO,QAAS8B,GAA7C,WAWCiP,CAAc7P,EAAMC,EAAOC,GA9Cf,SAAAG,GACjB,GAAGA,EACC,OAAO,kBAAC,IAAD,CAAU5B,GAAG,UA6CnB+K,CAAanJ,KCjCXyP,EA5EQ,WAAO,IAAD,EACO7R,mBAAS,IADhB,mBAClByJ,EADkB,KACRqI,EADQ,OAGH3S,IAAfuB,EAHkB,EAGlBA,KAAMyI,EAHY,EAGZA,MAEP4I,EAAe,Wb4Fd/Q,MAAM,GAAD,OAAI/B,EAAJ,6BAAoC,CAC5CgC,OAAQ,QAEPC,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MahGrBL,MAAK,SAAAgC,GACCA,EAAKf,MACJf,QAAQC,IAAI6B,EAAKf,OAEjB2P,EAAY5O,OAKtB8O,EAAU,SAAApM,Ib0FS,SAACA,EAAWyD,EAAQF,GAC7C,OAAOnI,MAAM,GAAD,OAAI/B,EAAJ,oBAAmB2G,EAAnB,YAAgCyD,GAAU,CAClDpI,OAAQ,SACR4B,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBwG,cAAc,UAAD,OAAYH,MAG5BjI,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OarG1B0Q,CAAcrM,EAAWlF,EAAKuD,IAAKkF,GAC9BjI,MAAK,SAAAgC,GACCA,EAAKf,MACJf,QAAQC,IAAI6B,EAAKf,OAEjB4P,QAShB,OAJA5R,qBAAU,WACN4R,MACD,IAGC,kBAAC,EAAD,CACIpQ,MAAM,kBACNC,YAAY,2BACZtB,UAAU,mBAEV,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,eAAd,gBACcmJ,EAAShJ,OADvB,YACiCgJ,EAAShJ,OAAS,EAAI,YAAc,aAErE,6BACA,wBAAIH,UAAU,cACTmJ,EAASlE,KAAI,SAACjB,EAASuB,GAAV,OACV,wBACIvF,UAAU,mFAMV0H,IAAKnC,GAEL,gCAASvB,EAAQvC,MACjB,kBAAC,IAAD,CAAMvB,GAAE,gCAA2B8D,EAAQL,MACvC,0BAAM3D,UAAU,kCAAhB,WAIJ,0BACIA,UAAU,gCACVO,QAAS,kBAAMmR,EAAQ1N,EAAQL,OAFnC,mBCQjBiO,EAvDA,WACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOvS,KAAK,IAAIwS,OAAK,EAACvJ,UAAWR,IACjC,kBAAC,IAAD,CAAOzI,KAAK,QAAQwS,OAAK,EAACvJ,UAAW+E,IACrC,kBAAC,IAAD,CAAOhO,KAAK,UAAUwS,OAAK,EAACvJ,UAAWrF,IACvC,kBAAC,IAAD,CAAO5D,KAAK,UAAUwS,OAAK,EAACvJ,UAAW9G,IACvC,kBAAC,EAAD,CACInC,KAAK,kBACLwS,OAAK,EACLvJ,UAAWK,IAEf,kBAAC,EAAD,CACItJ,KAAK,mBACLwS,OAAK,EACLvJ,UAAWiB,IAEf,kBAAC,EAAD,CACIlK,KAAK,mBACLwS,OAAK,EACLvJ,UAAWkB,IAEf,kBAAC,EAAD,CACInK,KAAK,kBACLwS,OAAK,EACLvJ,UAAW2B,IAEf,kBAAC,EAAD,CACI5K,KAAK,gBACLwS,OAAK,EACLvJ,UAAW4C,IAEf,kBAAC,IAAD,CAAO7L,KAAK,sBAAsBwS,OAAK,EAACvJ,UAAWkG,IACnD,kBAAC,IAAD,CAAOnP,KAAK,QAAQwS,OAAK,EAACvJ,UAAWuI,IACrC,kBAAC,EAAD,CACIxR,KAAK,mBACLwS,OAAK,EACLvJ,UAAW2I,IAEf,kBAAC,EAAD,CACI5R,KAAK,kBACLwS,OAAK,EACLvJ,UAAWiJ,IAEf,kBAAC,EAAD,CACIlS,KAAK,mCACLwS,OAAK,EACLvJ,UAAWsC,OC/D/BkH,IAAStJ,OACP,kBAAC,IAAMuJ,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8b812e38.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;","import { API } from '../config';\r\n\r\nexport const signup = user => {\r\n    return fetch(`${API}/signup`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n};\r\n\r\nexport const signin = user => {\r\n    return fetch(`${API}/signin`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n};\r\n\r\nexport const authenticate = (data, next) => {\r\n    if(typeof window !== 'undefined') {\r\n        localStorage.setItem('jwt', JSON.stringify(data));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const signout = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('jwt');\r\n        next();\r\n\r\n        return fetch(`${API}/signout`, {\r\n            method: \"GET\",\r\n        })\r\n        .then(response => {\r\n            console.log(\"signout\", response);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n    if(typeof window == 'undefined') {\r\n        return false;\r\n    }\r\n\r\n    if(localStorage.getItem('jwt')) {\r\n        return JSON.parse(localStorage.getItem('jwt'));\r\n    } else {\r\n        return false;\r\n    }\r\n};","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport { signout, isAuthenticated } from '../auth/index';\r\nimport { itemTotal } from './cartHelpers';\r\n\r\nconst isActive = (history, path) => {\r\n    if(history.location.pathname === path) {\r\n        return { color: '#ff9900' };\r\n    } else {\r\n        return { color: '#ffffff' };\r\n    }\r\n};\r\n\r\nconst Menu = ({ history }) => {\r\n    const [cart, setCart] = useState([]);\r\n\r\n    const updateCart = () => {\r\n        const cartUpdated = localStorage.getItem('cart');\r\n        setCart(cartUpdated);\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateCart();\r\n    }, [cart]);\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"nav nav-tabs bg-primary\">\r\n                <li className=\"nav-item\">\r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/\")}\r\n                        to=\"/\"\r\n                    >\r\n                        Home\r\n                </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/shop\")}\r\n                        to=\"/shop\"\r\n                    >\r\n                        Shop\r\n                </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/cart\")}\r\n                        to=\"/cart\"\r\n                    >\r\n                        Cart <sup><small className=\"cart-badge\">{itemTotal()}</small></sup>\r\n                    </Link>\r\n                </li>\r\n\r\n                {isAuthenticated() && isAuthenticated().user.role === 0 ? (\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/user/dashboard\")}\r\n                            to=\"/user/dashboard\"\r\n                        >\r\n                            Dashboard\r\n                    </Link>\r\n                    </li>\r\n                ) : (\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                className=\"nav-link\"\r\n                                style={isActive(history, \"/admin/dashboard\")}\r\n                                to=\"/admin/dashboard\"\r\n                            >\r\n                                Dashboard\r\n                    </Link>\r\n                        </li>\r\n                    )}\r\n\r\n                {!isAuthenticated() ? (\r\n                    <Fragment>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                className=\"nav-link\"\r\n                                style={isActive(history, \"/signin\")}\r\n                                to=\"/signin\"\r\n                            >\r\n                                Signin\r\n                        </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                className=\"nav-link\"\r\n                                style={isActive(history, \"/signup\")}\r\n                                to=\"/signup\"\r\n                            >\r\n                                Signup\r\n                        </Link>\r\n                        </li>\r\n                    </Fragment>\r\n                ) : (\r\n                        <li className=\"nav-item\">\r\n                            <span\r\n                                className=\"nav-link\"\r\n                                style={{ cursor: 'pointer', color: '#ffffff' }}\r\n                                onClick={() => {\r\n                                    signout(() => {\r\n                                        history.push('/')\r\n                                    });\r\n                                }}\r\n                            >\r\n                                Signout\r\n                    </span>\r\n                        </li>\r\n                    )}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Menu);","export const addItem = (item = [], count = 0, next = f => f) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count: 1\r\n        });\r\n\r\n        // remove duplicates\r\n        // build an Array from new Set and turn it back into array using Array.from\r\n        // so that later we can re-map it\r\n        // new set will only allow unique values in it\r\n        // so pass the ids of each object/product\r\n        // If the loop tries to add the same value again, it'll get ignored\r\n        // ...with the array of ids we got on when first map() was used\r\n        // run map() on it again and return the actual product from the cart\r\n\r\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\r\n            return cart.find(p => p._id === id);\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const itemTotal = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nexport const getCart = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n    }\r\n    return [];\r\n};\r\n\r\nexport const updateItem = (productId, count) => {\r\n    let cart = [];\r\n    if(typeof window !== 'undefined') {\r\n        if(localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, idx) => {\r\n            if(product._id === productId) {\r\n                cart[idx].count = count;\r\n            }\r\n        })\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n};\r\n\r\nexport const removeItem = (productId) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, idx) => {\r\n            if (product._id === productId) {\r\n                cart.splice(idx, 1);\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n    return cart;\r\n};\r\n\r\nexport const emptyCart = next => {\r\n    if(typeof window !== 'undefined') {\r\n        localStorage.removeItem('cart');\r\n        next();\r\n    }\r\n};\r\n","import React from 'react';\r\n\r\nimport Menu from './Menu';\r\nimport '../styles.css';\r\n\r\nconst Layout = ({ \r\n    title = 'Title', \r\n    description = 'Description', \r\n    className, \r\n    children \r\n}) => (\r\n    <div>\r\n        <Menu />\r\n        <div className=\"jumbotron\">\r\n            <h2>{title}</h2>\r\n            <p className=\"lead\">{description}</p>\r\n        </div>\r\n        <div className={className}>{children}</div>\r\n    </div>\r\n);\r\n\r\nexport default Layout;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Layout from '../core/Layout';\r\nimport { signup } from '../auth/index';\r\n\r\nconst Signup = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        rePassword: '',\r\n        error: '',\r\n        success: false\r\n    });\r\n\r\n    const { name, email, password, rePassword, error, success } = values\r\n    \r\n    const handleChange = name => event => {\r\n        setValues({\r\n            ...values, \r\n            error: false,\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false });\r\n        if (password !== rePassword) {\r\n            return setValues({\r\n                ...values,\r\n                password: '',\r\n                rePassword: '',\r\n                error: 'Please Re-Enter Your Password!!!'\r\n            });\r\n        }\r\n        \r\n        signup({ name, email, password })\r\n        .then(data => {\r\n            if(data.error) {\r\n                setValues({\r\n                    ...values, \r\n                    error: data.error, \r\n                    success: false\r\n                });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    email: '',\r\n                    password: '',\r\n                    rePassword: '',\r\n                    error: '',\r\n                    success: true\r\n                });\r\n            }\r\n        })\r\n    };\r\n\r\n    const showError = () => (\r\n        <div \r\n            className=\"alert alert-danger mt-4\"\r\n            style={{ display: error ? '' : 'none' }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div\r\n            className=\"alert alert-info mt-4\"\r\n            style={{ display: success ? '' : 'none' }}\r\n        >\r\n            New account is created! Please Signin <Link to=\"/signin\">Signin</Link>.\r\n        </div>\r\n    );\r\n\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input \r\n                    onChange={handleChange('name')} \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    value={name} \r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input \r\n                    onChange={handleChange('email')} \r\n                    type=\"email\" \r\n                    className=\"form-control\" \r\n                    value={email} \r\n                />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input \r\n                    onChange={handleChange('password')} \r\n                    type=\"password\" \r\n                    className=\"form-control\" \r\n                    value={password} \r\n                    autoComplete=\"true\" \r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Re-Enter Password</label>\r\n                <input \r\n                    onChange={handleChange('rePassword')} \r\n                    type=\"password\" \r\n                    className=\"form-control\"\r\n                    value={rePassword}  \r\n                    autoComplete=\"true\" \r\n                />\r\n            </div>\r\n            \r\n            <button \r\n                className=\"btn btn-primary\"\r\n                onClick={clickSubmit}\r\n            >\r\n                    Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Signup Page\"\r\n            description=\"Node React E-Commerce App\"\r\n            className=\"container col-md-8 offset-md-2\"\r\n        >\r\n            {signUpForm()}\r\n            {showSuccess()}\r\n            {showError()}\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Signup;","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Layout from '../core/Layout';\r\nimport { signin, authenticate, isAuthenticated } from '../auth/index';\r\n\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        email: 'mandy@gmail.com',\r\n        password: '1234567',\r\n        error: '',\r\n        loading: false,\r\n        redirectToReferrer: false\r\n    });\r\n\r\n    const { email, password, error, loading, redirectToReferrer } = values;\r\n    const { user } = isAuthenticated();\r\n\r\n    const handleChange = name => event => {\r\n        setValues({\r\n            ...values,\r\n            error: false,\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true });\r\n\r\n        signin({ email, password })\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({\r\n                        ...values,\r\n                        error: data.error,\r\n                        loading: false\r\n                    });\r\n                } else {\r\n                    authenticate(data, () => {\r\n                        setValues({\r\n                            ...values,\r\n                            redirectToReferrer: true\r\n                        });\r\n                    })\r\n                }\r\n            })\r\n    };\r\n\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger mt-4\"\r\n            style={{ display: error ? '' : 'none' }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () => (\r\n        loading && (\r\n            <div className=\"alert alert-info\">;\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        )\r\n    );\r\n\r\n    const redirectUser = () => {\r\n        if(redirectToReferrer) {\r\n            if(user && user.role === 1) {\r\n                return <Redirect to=\"/admin/dashboard\" />;\r\n            } else {\r\n                return <Redirect to=\"/user/dashboard\" />;\r\n            }\r\n        }\r\n        if(isAuthenticated()) {\r\n            return <Redirect to=\"/\"/>;\r\n        }\r\n    };\r\n\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input\r\n                    onChange={handleChange('email')}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input\r\n                    onChange={handleChange('password')}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                    autoComplete=\"true\"\r\n                />\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={clickSubmit}\r\n            >\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Signin Page\"\r\n            description=\"Node React E-Commerce App\"\r\n            className=\"container col-md-8 offset-md-2\"\r\n        >\r\n            {signUpForm()}\r\n            {showLoading()}\r\n            {showError()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\nimport { API } from '../config';\r\n\r\nconst ShowImage = ({ item, url }) => (\r\n    <div className=\"product-img\">\r\n        <img\r\n            src={`${API}/${url}/photo/${item._id}`}\r\n            alt={item.name}\r\n            className=\"mb-3\"\r\n            style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default ShowImage;\r\n","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport { addItem, updateItem, removeItem } from './cartHelpers';\r\nimport ShowImage from './ShowImage';\r\n\r\nconst Card = ({ \r\n    product, \r\n    showViewProductButton = true, \r\n    showAddToCartButton = true, \r\n    cartUpdate = false,\r\n    showRemoveProductButton = false,\r\n    setRun = f => f,\r\n    run = undefined\r\n}) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [count, setCount] = useState(product.count);\r\n\r\n    const showViewButton = () => {\r\n        return (\r\n            showViewProductButton && (\r\n                <Link to={`/product/${product._id}`}>\r\n                    <button className=\"btn btn-outline-primary mt-2 mb-2 mr-2\">\r\n                        View Product\r\n                    </button>\r\n                </Link>\r\n            )\r\n        )\r\n    };\r\n\r\n    const AddToCart = () => {\r\n        addItem(product, setRedirect(true));\r\n    };\r\n\r\n    const showRemoveButton = showRemoveProductButton => {\r\n        return (\r\n            showRemoveProductButton && (\r\n                <button\r\n                    className=\"btn btn-outline-danger mt-2 mb-2\"\r\n                    onClick={() => {\r\n                        removeItem(product._id);\r\n                        setRun(!run);\r\n                    }}\r\n                >\r\n                    Remove Item\r\n                </button>\r\n            )\r\n        )\r\n    };\r\n\r\n    const shouldRedirect = redirect => {\r\n        if (redirect) {\r\n            return <Redirect to=\"/cart\" />;\r\n        }\r\n    };\r\n\r\n    const showAddToCart = showAddToCartButton => {\r\n        return(\r\n            showAddToCartButton && (\r\n                <button\r\n                    className=\"btn btn-outline-warning mt-2 mb-2\"\r\n                    onClick={AddToCart}\r\n                >\r\n                    Add To Cart\r\n                </button>\r\n            )\r\n        )\r\n    };\r\n\r\n    const handleChange = productId => event => {\r\n        setRun(!run);\r\n        setCount(event.target.value < 1 ? 1: event.target.value);\r\n        if(event.target.value >= 1) {\r\n            updateItem(productId, event.target.value);\r\n        }\r\n    }\r\n\r\n    const showCartUpdateOptions = cartUpdate => {\r\n        return cartUpdate && (\r\n            <div>\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-gruop-prepend\">\r\n                        <span className=\"input-group-text\">Adjust Quantity</span>\r\n                    </div>\r\n                    <input \r\n                        type=\"number\" \r\n                        className=\"form-control\" \r\n                        value={count} \r\n                        onChange={handleChange(product._id)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showStock = quantity => {\r\n        return quantity > 0 \r\n            ? <span className=\"bdge badge-primary badge-pill\">In Stock</span> \r\n            : <span className=\"bdge badge-primary badge-pill\">Out of Stock</span>\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header name\">{product.name}</div>\r\n            <div className=\"card-body\">\r\n                {shouldRedirect(redirect)}\r\n                <ShowImage item={product} url=\"product\" />\r\n                <p className=\"lead mt-2\">\r\n                    {product.description.substring(0, 100)}\r\n                </p>\r\n                <p className=\"black-10\">${product.price}</p>\r\n                <p className=\"black-9\">\r\n                    Category: {product.category && product.category.name}\r\n                </p>\r\n                <p className=\"black-9\">\r\n                    Added on {moment(product.createdAt).fromNow()}\r\n                </p>\r\n                {showStock(product.quantity)}\r\n                <br />\r\n                {showViewButton(showViewProductButton)}\r\n                {showAddToCart(showAddToCartButton)}\r\n                {showRemoveButton(showRemoveProductButton)}\r\n                {showCartUpdateOptions(cartUpdate)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Card;","import queryString from 'query-string';\r\n\r\nimport { API } from \"../config\";\r\n\r\nexport const getProducts = sortBy => {\r\n    return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n};\r\n\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getFilteredProduct = (skip, limit, filters = {}) => {\r\n    const data = {\r\n        limit, \r\n        skip, \r\n        filters\r\n    };\r\n    return fetch(`${API}/products/by/search`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n};\r\n\r\nexport const list = params => {\r\n    console.log('params', params);\r\n    const query = queryString.stringify(params);\r\n    console.log('query', query);\r\n    return fetch(`${API}/products/search?${query}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n};\r\n\r\n\r\nexport const read = productId => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listRelated = productId => {\r\n    return fetch(`${API}/products/related/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getBraintreeClientToken = (userId, token)=> {\r\n    return fetch(`${API}/braintree/getToken/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const processPayment = (userId, token, paymentData) => {\r\n    return fetch(`${API}/braintree/payment/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(paymentData)\r\n\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const createOrder = (userId, token, createOrderData) => {\r\n    return fetch(`${API}/order/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({order: createOrderData })\r\n\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};","import React, { useState, useEffect } from 'react';\r\n\r\nimport Layout from './Layout';\r\nimport Card from './Card';\r\nimport { getCategories, list } from './apiCore';\r\n\r\nconst Search = () => {\r\n    const [data, setData] = useState({\r\n        categories: [],\r\n        category: '',\r\n        search: '',\r\n        results: [],\r\n        searched: false\r\n    });\r\n\r\n    const { \r\n        categories, \r\n        category, \r\n        search,\r\n        results,\r\n        searched\r\n    } = data;\r\n\r\n    const loadCategories = () => {\r\n        getCategories()\r\n            .then(data => {\r\n                if(data.error){\r\n                    console.log(data.error);\r\n                } else {\r\n                    setData({...data, categories: data})\r\n                }\r\n            })\r\n    };\r\n\r\n    const searchData = () => {\r\n        // console.log(search, category)\r\n        if(search) {\r\n            list({search: search || undefined, category: category })\r\n                .then(response => {\r\n                    if(response.error) {\r\n                        console.log(response.error);\r\n                    } else {\r\n                        setData({ \r\n                            ...data, \r\n                            results: response, \r\n                            searched: true \r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    };\r\n\r\n    const searchMessage = (searched, results) => {\r\n        if(searched && results.length > 0) {\r\n            return `Found ${results.length} products.` \r\n        }\r\n        if (searched && results.length < 1) {\r\n            return `No products found!!!` \r\n        }\r\n    }\r\n\r\n    const searchSubmit = event => {\r\n        event.preventDefault();\r\n        searchData();\r\n    };\r\n\r\n    const handleChange = name => event => {\r\n        setData({\r\n            ...data, \r\n            [name]: event.target.value,\r\n            searched: false\r\n        })\r\n    };\r\n\r\n    const searchedProducts = (results = []) => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mt-4 mb-4\">\r\n                    {searchMessage(searched, results)}\r\n                </h2>\r\n                <div className=\"row\">\r\n                    {results.map((product, idx) => (\r\n                        <Card product={product} key={idx} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );  \r\n    };\r\n\r\n    const searchForm = () => (\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select \r\n                            className=\"btn mr-2\" \r\n                            onChange={handleChange('category')}\r\n                        >\r\n                            <option value=\"All\">All Category</option>\r\n                            {categories.map((category, idx) => (\r\n                                <option key={idx} value={category._id}>\r\n                                    {category.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange('search')}\r\n                        placeholder=\"Search By Name\"\r\n                    />\r\n                </div>\r\n                <div className=\"btn input-group-append\" style={{border: 'none'}}>\r\n                    <button className=\"input-group-text\">Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    );\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"container mb-3\">\r\n                {searchForm()}\r\n            </div>\r\n            \r\n            <div className=\"container-fluid mb-3\">\r\n                {searchedProducts(results)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Search;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Layout from './Layout';\r\nimport Card from './Card';\r\nimport Search from './Search';\r\nimport { getProducts } from './apiCore';\r\n\r\nconst Home = () => {\r\n    const [productsBySell, setProductsBySell] = useState([]);\r\n    const [productsByArrival, setProductsByArrival] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadProductsBySell = () => {\r\n        getProducts('sold')\r\n            .then(data => {\r\n                if(data.error) {\r\n                    setError(data.error);\r\n                } else {\r\n                    setProductsBySell(data);\r\n                }\r\n            })\r\n    };\r\n\r\n    const loadProductsByArrival = () => {\r\n        getProducts('createdAt')\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setError(data.error);\r\n                } else {\r\n                    setProductsByArrival(data);\r\n                }\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProductsByArrival();\r\n        loadProductsBySell();\r\n    }, [])\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Home Page\"\r\n            description=\"Node React E-Commerce App\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <Search />\r\n            <h2 className=\"mb-4\">Best Seller</h2>\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, idx) => (\r\n                    <div key={idx} className=\"col-4 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n            <h2 className=\"mb-4\">New Arrival</h2>\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, idx) => (\r\n                    <div key={idx} className=\"col-4 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { isAuthenticated } from './index';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => (\r\n    <Route \r\n        {...rest} \r\n        render={props => \r\n            isAuthenticated() ? (\r\n                <Component {...props}/>\r\n            ) : (\r\n                <Redirect \r\n                    to={{\r\n                        pathname: '/signin', \r\n                        state:{ from: props.location}\r\n                    }} \r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth/index';\r\nimport { getPurchaseHistory } from './apiUser';\r\n\r\nconst Dashboard = () => {\r\n    const [history, setHistory] = useState([]); \r\n\r\n    const { user: { _id, name, email, role}, token } = isAuthenticated();\r\n\r\n    const init = (userId, token) => {\r\n        getPurchaseHistory(userId, token)\r\n        .then(data => {\r\n            if(data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setHistory(data);\r\n            }\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(_id, token);\r\n    }, []);\r\n\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">User Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/cart\">My Cart</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>Profile Update</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                    <li className=\"list-group-item\">{token}</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const purchaseHistory = history => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Purchase History</h3>\r\n                <ul className=\"list-group\">\r\n                    {\r\n                        history.map(h => (\r\n                            h.products.map((product, pIndex) => (\r\n                                <li className=\"list-group-item\" key={pIndex}>\r\n                                    <h6>Product Name: {product.name}</h6>\r\n                                    <h6>Product Price: {product.price}</h6>\r\n                                    <h6>Product Date: {moment(product.createdAt).fromNow()}</h6>\r\n                                </li>\r\n                            ))\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    };\r\n    \r\n    return (\r\n        <Layout \r\n            title=\"Dashboard\" \r\n            description={`G' day ${name}!`} \r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    {userLinks()}\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    {userInfo()}\r\n                    {purchaseHistory(history)}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default Dashboard;","import { API } from \"../config\";\r\n\r\nexport const read = (userId, token) => {\r\n    return fetch(`${API}/user/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n};\r\n\r\nexport const update = (userId, token, user) => {\r\n    return fetch(`${API}/user/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateUser = (user, next) => {\r\n    if(typeof window !== 'undefined') {\r\n        if(localStorage.getItem('jwt')) {\r\n            let auth = JSON.parse(localStorage.getItem('jwt'));\r\n            auth.user= user;\r\n            localStorage.setItem('jwt', JSON.stringify(auth));\r\n            next();\r\n        }\r\n    }\r\n};\r\n\r\nexport const getPurchaseHistory = (userId, token) => {\r\n    return fetch(`${API}/orders/by/user/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { isAuthenticated } from './index';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/signin',\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n        }\r\n    />\r\n);\r\n\r\nexport default AdminRoute;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth/index';\r\n\r\nconst AdminDashboard = () => {\r\n    const { user: { _id, name, email, role }, token } = isAuthenticated();\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">Admin Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>Profile Update</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/category\">Create Category</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/product\">Create Product</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/orders\">View Orders</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/products\">Manage Product</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                    <li className=\"list-group-item\">{token}</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G' day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    {adminLinks()}\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    {adminInfo()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default AdminDashboard;","import { API } from '../config';\r\n\r\n/* CATEGORY */\r\n\r\nexport const createCategory = (userId, token, category) => {\r\n    return fetch(`${API}/category/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(category)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n};\r\n\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: \"GET\"\r\n    })\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err))\r\n};\r\n\r\n/* PRODUCT */\r\n\r\nexport const createProduct = (userId, token, product) => {\r\n    return fetch(`${API}/product/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n};\r\n\r\nexport const listOrders = (userId, token) => {\r\n    return fetch(`${API}/order/list/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getStatusValues = (userId, token) => {\r\n    return fetch(`${API}/order/status-values/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateOrderStatus = (userId, token, orderId, status) => {\r\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ status, orderId })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n/**\r\n * to perform crud on product\r\n * get all products\r\n * get a single product\r\n * update single product\r\n * delete single product\r\n */\r\n\r\nexport const getProducts = () => {\r\n    return fetch(`${API}/products?limit=undefined`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n};\r\n\r\nexport const deleteProduct = (productId, userId, token) => {\r\n    return fetch(`${API}/product/${productId}/${userId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getProduct = productId => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n};\r\n\r\nexport const updateProduct = (productId, userId, token, product) => {\r\n    return fetch(`${API}/product/${productId}/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth/index';\r\nimport { createCategory } from './apiAdmin';\r\n\r\nconst AddCategory = () => {\r\n    const [name, setName] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    // destructure user and token from localstorage\r\n    const {user, token} = isAuthenticated();\r\n\r\n    const handleChange = e => {\r\n        setError('');\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        setName('');\r\n        setError('');\r\n        setSuccess(false);\r\n        // make request to api to create category\r\n        createCategory(user._id, token, {name})\r\n        .then(data => {\r\n            if(data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setError('');\r\n                setSuccess(true);\r\n            }\r\n        })\r\n    };\r\n\r\n    const newCategoryForm = () => (\r\n        <form onSubmit={clickSubmit}>\r\n            <div className=\"form-group\">\r\n                <lable className=\"text-muted\">Name</lable>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    value={name} \r\n                    onChange={handleChange}\r\n                    autoFocus\r\n                    required\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-outline-primary\">Create Category</button>\r\n        </form>\r\n    );\r\n\r\n    const showSuccess = () => {\r\n        if(success) {\r\n            return <h3 className=\"text-success\">{name} is created!</h3>\r\n        }\r\n    };\r\n\r\n    const showError = () => {\r\n        if(error) {\r\n            return <h3 className=\"text-success\">{name} should be unique!</h3>\r\n        }\r\n    };\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">Back to Dashboard</Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Add a new category\"\r\n            description={`G' day ${user.name}!, ready to add a new category`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {newCategoryForm()}\r\n                    {goBack()}\r\n                    {showError()}\r\n                    {showSuccess()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default AddCategory","import React, { useState, useEffect } from 'react';\r\n\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth/index';\r\nimport { createProduct, getCategories } from './apiAdmin';\r\n\r\nconst AddProduct = () => {\r\n    const {user, token} = isAuthenticated();\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        photo,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    // load categories and set form data\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                setValues({ \r\n                    ...values, \r\n                    categories: data, \r\n                    formData: new FormData() \r\n                })\r\n            }\r\n            \r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, [])\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' \r\n            ? event.target.files[0] \r\n            : event.target.value;\r\n\r\n        formData.set(name, value);\r\n        setValues({...values, [name]: value, error: false });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true });\r\n\r\n        createProduct(user._id, token, formData)\r\n        .then(data => {\r\n            if(data.error) {\r\n                setValues({...values, error: data.error});\r\n            } else {\r\n                setValues({\r\n                    ...values, \r\n                    name: '',\r\n                    description: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    photo: '',\r\n                    loading: false,\r\n                    createdProduct: data.name,\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input \r\n                        onChange={handleChange('photo')} \r\n                        type=\"file\" \r\n                        name=\"photo\" \r\n                        accept=\"image/*\" \r\n                    />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Name</label>\r\n                <input \r\n                    onChange={handleChange('name')} \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    value={name} \r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <textarea\r\n                    onChange={handleChange('description')}\r\n                    className=\"form-control\"\r\n                    value={description}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Price</label>\r\n                <input\r\n                    onChange={handleChange('price')}\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={price}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Category</label>\r\n                <select\r\n                    onChange={handleChange('category')}\r\n                    className=\"form-control\"\r\n                >\r\n                    <option>Please Select</option>\r\n                    {categories && categories.map((category, idx) => (\r\n                        <option key={idx} value={category._id}>{category.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Shipping</label>\r\n                <select\r\n                    onChange={handleChange('shipping')}\r\n                    className=\"form-control\"\r\n                >   \r\n                    <option>Please Select</option>\r\n                    <option value=\"0\">NO</option>\r\n                    <option value=\"1\">YES</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Quantity</label>\r\n                <input\r\n                    onChange={handleChange('quantity')}\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={quantity}\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-outline-primary\">Create Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger mt-4\"\r\n            style={{ display: error ? '' : 'none' }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div\r\n            className=\"alert alert-info mt-4\"\r\n            style={{ display: createdProduct ? '' : 'none' }}\r\n        >\r\n            <h2>{`${createdProduct}`} is created!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () => (\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading!!!</h2>\r\n            </div>\r\n        )\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Add a new product\"\r\n            description={`G' day ${user.name}!, ready to add a new product?`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showError()}\r\n                    {showSuccess()}\r\n                    {newPostForm()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default AddProduct;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth/index';\r\nimport { getProduct, getCategories, updateProduct } from './apiAdmin';\r\n\r\nconst UpdateProduct = ({match}) => {\r\n    const { user, token } = isAuthenticated();\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        photo,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    const init = productId => {\r\n        getProduct(productId)\r\n            .then(data => {\r\n                if(data.error) {\r\n                    setValues({ ...values, error: data.error });\r\n                } else {\r\n                    // populate the state\r\n                    setValues({\r\n                        ...values,\r\n                        name: data.name,\r\n                        description: data.description,\r\n                        price: data.price,\r\n                        category: data.category._id,\r\n                        shipping: data.shipping,\r\n                        quantity: data.quantity,\r\n                        formData: new FormData()\r\n                    });\r\n                    // load categories\r\n                    initCategories();\r\n                }\r\n            })\r\n    };\r\n\r\n    // load categories and set form data\r\n    const initCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    categories: data,\r\n                    formData: new FormData()\r\n                });\r\n            }\r\n\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.productId);  \r\n    }, [])\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo'\r\n            ? event.target.files[0]\r\n            : event.target.value;\r\n\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value, error: false });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true });\r\n\r\n        updateProduct(match.params.productId, user._id, token, formData)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({ ...values, error: data.error });\r\n                } else {\r\n                    setValues({\r\n                        ...values,\r\n                        name: '',\r\n                        description: '',\r\n                        price: '',\r\n                        quantity: '',\r\n                        photo: '',\r\n                        loading: false,\r\n                        redirectToProfile: true,\r\n                        error: false,\r\n                        createdProduct: data.name,\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input\r\n                        onChange={handleChange('photo')}\r\n                        type=\"file\"\r\n                        name=\"photo\"\r\n                        accept=\"image/*\"\r\n                    />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Name</label>\r\n                <input\r\n                    onChange={handleChange('name')}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={name}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <textarea\r\n                    onChange={handleChange('description')}\r\n                    className=\"form-control\"\r\n                    value={description}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Price</label>\r\n                <input\r\n                    onChange={handleChange('price')}\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={price}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Category</label>\r\n                <select\r\n                    onChange={handleChange('category')}\r\n                    className=\"form-control\"\r\n                >\r\n                    <option>Please Select</option>\r\n                    {categories && categories.map((category, idx) => (\r\n                        <option key={idx} value={category._id}>{category.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Shipping</label>\r\n                <select\r\n                    onChange={handleChange('shipping')}\r\n                    className=\"form-control\"\r\n                >\r\n                    <option>Please Select</option>\r\n                    <option value=\"0\">NO</option>\r\n                    <option value=\"1\">YES</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Quantity</label>\r\n                <input\r\n                    onChange={handleChange('quantity')}\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={quantity}\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-outline-primary\">Update Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger mt-4\"\r\n            style={{ display: error ? '' : 'none' }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div\r\n            className=\"alert alert-info mt-4\"\r\n            style={{ display: createdProduct ? '' : 'none' }}\r\n        >\r\n            <h2>{`${createdProduct}`} is updated!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () => (\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading!!!</h2>\r\n            </div>\r\n        )\r\n    );\r\n    \r\n    const redirectUser = () => {\r\n        if(redirectToProfile) {\r\n            if(!error) {\r\n                return <Redirect to=\"/\" />;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Add a new product\"\r\n            description={`G' day ${user.name}!, ready to add a new product?`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showError()}\r\n                    {showSuccess()}\r\n                    {newPostForm()}\r\n                    {redirectUser()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default UpdateProduct;","import React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth/index';\r\nimport { listOrders, getStatusValues, updateOrderStatus } from './apiAdmin';\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [statusValues, setStatusValues] = useState([]);\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const loadOrders = () => {\r\n        listOrders(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setOrders(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadStatusValues = () => {\r\n        getStatusValues(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setStatusValues(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadOrders();\r\n        loadStatusValues();\r\n    }, []);\r\n\r\n    const showOrdersLength = () => {\r\n        if(orders.length > 0) {\r\n            return (\r\n                <h1 className=\"text-danger display-2\">Total Orders: {orders.length}</h1>\r\n            )\r\n        } else {\r\n            return <h1 className=\"text-danger\">No Orders</h1>\r\n        }\r\n    };\r\n\r\n    const showInput = (key, value) => (\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">{key}</div>\r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly />\r\n        </div>\r\n    );\r\n\r\n    const handleStatusChange = (e, orderId) => {\r\n        updateOrderStatus(user._id, token, orderId, e.target.value)\r\n        .then(data => {\r\n            if(data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                loadOrders();\r\n            }\r\n        })\r\n    };\r\n\r\n    const showStatus = order => (\r\n        <div className=\"form-group\">\r\n            <h3 className=\"mark mb-4\">Status: {order.status}</h3>\r\n            <select \r\n                className=\"form-control\" \r\n                onChange={e => handleStatusChange(e, order._id)}\r\n            >\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index) => (\r\n                    <option key={index} value={status}>{status}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Orders\"\r\n            description={`G' day ${user.name}, you can manage all the orders here.`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showOrdersLength()}\r\n                    {orders.map((order, oIndex) => (\r\n                        <div \r\n                            className=\"mt-5\" \r\n                            key={oIndex}\r\n                            style={{borderBottom: '5px solid indigo'}}\r\n                        >\r\n                            <h2 className=\"mb-5\">\r\n                                <span className=\"bg-primary\">Order ID: {order._id}</span>\r\n                            </h2>\r\n\r\n                            <ul className=\"list-group mb-2\">\r\n                                <li className=\"list-group-item\">{showStatus(order)}</li>\r\n                                <li className=\"list-group-item\">Transaction ID: {order.status}</li>\r\n                                <li className=\"list-group-item\">Amout: ${order.amount}</li>\r\n                                <li className=\"list-group-item\">Ordered By: {order.user.name}</li>\r\n                                <li className=\"list-group-item\">Ordered On: {moment(order.createdAt).fromNow()}</li>\r\n                                <li className=\"list-group-item\">Delivery Address: {order.address}</li>\r\n                            </ul>\r\n                            <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                Total products in the order: {order.products.length}\r\n                            </h3>\r\n\r\n                            {order.products.map((product, pIndex) => (\r\n                                <div \r\n                                    className=\"mb-4\" \r\n                                    key={pIndex} \r\n                                    style={{padding: '20px', border: '1px solid indigo'}}\r\n                                >\r\n                                    {showInput('Product Name', product.name)}\r\n                                    {showInput('Product Price', product.price)}\r\n                                    {showInput('Product Total', product.count)}\r\n                                    {showInput('Product Id', product._id)}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Orders;","import React, { useState, useEffect } from 'react';\r\n\r\nconst Checkbox = ({ categories, handleFilters }) => {\r\n    const [checked, setChecked] = useState([]);\r\n\r\n    const handleToggle = category => () => {\r\n        // return the first index or -1\r\n        const currentCategoryId = checked.indexOf(category);\r\n        const newCheckedCategoryId = [...checked];\r\n        // if currently checked was not already in checked state > push\r\n        // else pull/take off\r\n        if(currentCategoryId === -1) {\r\n            newCheckedCategoryId.push(category);\r\n        } else {\r\n            newCheckedCategoryId.splice(currentCategoryId, 1);\r\n        }\r\n        setChecked(newCheckedCategoryId);\r\n        handleFilters(newCheckedCategoryId);\r\n    };\r\n\r\n    return categories.map((category, idx) => (\r\n        <li className=\"list-unstyled\" key={idx}>\r\n            <input \r\n                type=\"checkbox\" \r\n                className=\"form-check-input\" \r\n                onChange={handleToggle(category._id)}\r\n                value={checked.indexOf(category._id === -1)}\r\n            />\r\n            <label className=\"form-check-label\">\r\n                {category.name}\r\n            </label>\r\n        </li>\r\n    ));\r\n};\r\n\r\nexport default Checkbox;","import React, { useState, useEffect, Fragment } from 'react';\r\n\r\nconst RadioBox = ({ prices, handleFilters }) => {\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = event => {\r\n        handleFilters(event.target.value);\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    return prices.map((price, idx) => (\r\n        <div key={idx}>\r\n            <input\r\n                type=\"radio\"\r\n                className=\"mr-2 ml-4\"\r\n                onChange={handleChange}\r\n                name={price}\r\n                value={`${price._id}`}\r\n            />\r\n            <label className=\"form-check-label\">\r\n                {price.name}\r\n            </label>\r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default RadioBox;","export const prices =[\r\n    {\r\n        _id: 0, \r\n        name: \"Any\",\r\n        array: []\r\n    },\r\n    {\r\n        _id: 1,\r\n        name: \"$0 to $9\",\r\n        array: [0, 9]\r\n    },\r\n    {\r\n        _id: 2,\r\n        name: \"$10 to $19\",\r\n        array: [10, 19]\r\n    },\r\n    {\r\n        _id: 3,\r\n        name: \"$20 to $29\",\r\n        array: [20, 29]\r\n    },\r\n    {\r\n        _id: 4,\r\n        name: \"$30 to $39\",\r\n        array: [30, 39]\r\n    },\r\n    {\r\n        _id: 5,\r\n        name: \"More than $40\",\r\n        array: [40, 99]\r\n    }\r\n]","import React, { useState, useEffect } from 'react';\r\n\r\nimport Layout from './Layout';\r\nimport Card from './Card';\r\nimport Checkbox from './Checkbox';\r\nimport RadioBox from './RadioBox';\r\nimport { getCategories, getFilteredProduct } from './apiCore';\r\nimport { prices } from './fixedPrice';\r\n\r\nconst Shop = () => {\r\n    const [myFilters, setMyFilters] = useState({\r\n        filters: { category: [], price: [] }\r\n    })\r\n    const [categories, setCategories] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [limit, setLimit] = useState(6);\r\n    const [skip, setSkip] = useState(0);\r\n    const [size, setSize] = useState(0);\r\n    const [filteredResult, setFilteredResult] = useState([]);\r\n\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        })\r\n    };\r\n\r\n    const loadFilteredResults = newFilters => {\r\n        // console.log(newFilters);\r\n        getFilteredProduct(skip, limit, newFilters)\r\n            .then(data => {\r\n                if(data.error) {\r\n                    setError(data.error);\r\n                } else {\r\n                    setFilteredResult(data.data);\r\n                    setSize(data.size);\r\n                    setSkip(0);\r\n                }\r\n            })\r\n    };\r\n\r\n    const loadMore = newFilters => {\r\n        let toSkip = skip + limit;\r\n        // console.log(newFilters);\r\n        getFilteredProduct(toSkip, limit, newFilters.filters)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setError(data.error);\r\n                } else {\r\n                    setFilteredResult([...filteredResult, ...data.data]);\r\n                    setSize(data.size);\r\n                    setSkip(toSkip);\r\n                }\r\n            })\r\n    };\r\n\r\n    const loadMoreButton = () => {\r\n        return (\r\n            size > 0 && size >= limit && (\r\n                <button \r\n                    className=\"btn btn-warning mb-5\"\r\n                    onClick={loadMore}\r\n                >\r\n                    Load More\r\n                </button>\r\n            )\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n        loadFilteredResults(myFilters.filters);\r\n    }, []);\r\n\r\n    const handleFilters = (filters, filterBy) => {\r\n        // console.log(filters, filterBy);\r\n        const newFilters = {...myFilters};\r\n        newFilters.filters[filterBy] = filters;\r\n\r\n        if(filterBy === 'price') {\r\n            let priceValues = handlePrice(filters);\r\n            newFilters.filters[filterBy] = priceValues;\r\n        }\r\n        loadFilteredResults(myFilters.filters);\r\n        setMyFilters(newFilters);\r\n    };\r\n\r\n    const handlePrice = value => {\r\n        const data = prices;\r\n        // let array = [];\r\n\r\n        // for(let key in data) {\r\n        //     if(data[key]._id === parseInt(value)) {\r\n        //         array = data[key].array\r\n        //     }\r\n        // };\r\n        // return array;\r\n\r\n        const idx = data.findIndex(d => d._id === parseInt(value));\r\n        return data[idx].array;\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shop Page\"\r\n            description=\"Search and find book of your choice\"\r\n            className=\"container-fluid\"\r\n        >\r\n        <div className=\"row\">\r\n            <div className=\"col-4\">\r\n                <h4>Filter by Categories</h4>\r\n                <ul>\r\n                    <Checkbox \r\n                        categories={categories} \r\n                        handleFilters={filters => \r\n                            handleFilters(filters, 'category')\r\n                        }\r\n                    />\r\n                </ul>\r\n\r\n                <h4>Filter by price range</h4>\r\n                <div>\r\n                    <RadioBox \r\n                        prices={prices} \r\n                        handleFilters={filters => \r\n                            handleFilters(filters, 'price')\r\n                        }\r\n                    />\r\n                </div>  \r\n            </div>\r\n                <div className=\"col-8\">\r\n                    <h2 className=\"mb-4\">Products</h2>\r\n                    <div className=\"row\">\r\n                        {filteredResult.map((product, idx) => (\r\n                            <div key={idx} className=\"col-4 mb-3\">\r\n                                <Card key={idx} product={product} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <hr/>\r\n                    {loadMoreButton()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Shop;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Layout from './Layout';\r\nimport Card from './Card';\r\nimport Search from './Search';\r\nimport { listRelated, read } from './apiCore';\r\n\r\nconst Product = props => {\r\n    const [product, setProduct] = useState({});\r\n    const [relatedProduct, setRelatedProduct] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadSingleProduct = productId => {\r\n        read(productId)\r\n            .then(data => {\r\n                if(data.error) {\r\n                    setError(data.error);\r\n                } else {\r\n                    setProduct(data);\r\n                    //fetch related products\r\n                    listRelated(data._id)\r\n                        .then(data => {\r\n                            if(data.error) {\r\n                                setError(data.error);\r\n                            } else {\r\n                                setRelatedProduct(data)\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        const productId = props.match.params.productId;\r\n        loadSingleProduct(productId);\r\n    }, [props]);\r\n\r\n    return (\r\n        <Layout\r\n            title={product && product.name}\r\n            description={\r\n                product && \r\n                product.description && \r\n                product.description.substring(0,100)\r\n            }\r\n            className=\"container-fluid\"\r\n        >\r\n            <h2 className=\"mb-4\">{product.name}</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    {product && product.description && (\r\n                        <Card product={product} showViewProductButton={false} />\r\n                    )}\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <h4>Related Products</h4>\r\n                    {relatedProduct.map((product, idx) => (\r\n                        <Card key={idx} product={product} /> \r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </Layout>    \r\n    );\r\n};\r\n\r\nexport default Product;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport DropIn from 'braintree-web-drop-in-react';\r\n\r\nimport { processPayment, getBraintreeClientToken, createOrder } from './apiCore';\r\nimport { isAuthenticated } from '../auth/index';\r\nimport { emptyCart } from './cartHelpers';\r\n\r\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: '',\r\n        instance: {},\r\n        address: ''\r\n    });\r\n\r\n    const userId = isAuthenticated() && isAuthenticated().user._id;\r\n    const token = isAuthenticated() && isAuthenticated().token;\r\n\r\n    // Get Braintree client token\r\n    const getToken = (userId, token) => {\r\n        getBraintreeClientToken(userId, token)\r\n            .then(data => {\r\n                if(data.error) {\r\n                    setData({\r\n                        ...data,\r\n                        error: data.error\r\n                    });\r\n                } else {\r\n                    setData({\r\n                        clientToken: data.clientToken\r\n                    })\r\n                }\r\n            })\r\n    };\r\n\r\n    const handleAddress = event => {\r\n        setData({\r\n            ...data,\r\n            address: event.target.value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getToken(userId, token);\r\n    }, [])\r\n\r\n    const getTotal = () => {\r\n        const total = products.reduce((currentValue, nextvalue) => {\r\n            return currentValue + nextvalue.count * nextvalue.price;\r\n        }, 0);\r\n        return total.toFixed(2);\r\n    };\r\n\r\n    const showCheckout = () => (\r\n        isAuthenticated() ? (\r\n            <div>{showDropIn()}</div>\r\n        ) : (\r\n                <Link to=\"/signin\">\r\n                    <button className=\"btn btn-primary\">\r\n                        Sign in to checkout\r\n                    </button>\r\n                </Link>\r\n            )\r\n    );\r\n\r\n    let deliveryAddress = data.address;\r\n\r\n    const buy = () => {\r\n        setData({ loading: true });\r\n        // send the nonce to your server\r\n        // nonce = data.instance.requestPaymentMethod()\r\n        let nonce;\r\n        let getNonce = data.instance.requestPaymentMethod() \r\n            .then(data => {\r\n                nonce = data.nonce;\r\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\r\n                // and also total to be charged\r\n                // console.log('send nonce and total to process:', nonce, getTotal(products));\r\n                // getTotal(products);\r\n                const paymentData = {\r\n                    paymentMethodNonce: nonce,\r\n                    amount: getTotal(products)\r\n                };\r\n                processPayment(userId, token, paymentData)\r\n                    .then(response => {\r\n                        console.log(response)\r\n                        setData({\r\n                            ...response,\r\n                            success: true\r\n                        });\r\n                        \r\n                        // create order\r\n                        const createOrderData = {\r\n                            products: products,\r\n                            transaction_id: response.transaction.id,\r\n                            amount: response.transaction.amount,\r\n                            address: deliveryAddress\r\n                        };\r\n                        \r\n                        createOrder(userId, token, createOrderData)\r\n                            .then(response => {\r\n                                // empty cart\r\n                                emptyCart(() => {\r\n                                    setRun(!run); // run useEffect in parent Cart\r\n                                    setData({\r\n                                        loading: false,\r\n                                        success: true\r\n                                    });\r\n                                    console.log('payment success and empty cart');\r\n                                });\r\n\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error);\r\n                                setData({ loading: false })\r\n                            });\r\n                    })\r\n                    .catch(error => {\r\n                        setData({ loading: false });\r\n                        console.log(error);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                // console.log('dropping error: ', error);\r\n                setData({\r\n                    ...data,\r\n                    error: error.message\r\n                })\r\n            });\r\n    };\r\n\r\n    const showDropIn = () => (\r\n        <div \r\n            onBlur={() => setData({\r\n                ...data,\r\n                error: ''\r\n            })}\r\n        >\r\n            {data.clientToken !== null && products.length > 0\r\n                ? (\r\n                    <div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <label className=\"text-muted\">Delivery Address: </label>\r\n                            <textarea \r\n                                onChange={handleAddress}\r\n                                className=\"form-control\"\r\n                                value={data.address}\r\n                                placeholder=\"Type your delivery address here...\"\r\n                            />\r\n                        </div>\r\n                        <DropIn\r\n                            options={{\r\n                                authorization: data.clientToken,\r\n                                paypal: {\r\n                                    flow: 'vault'\r\n                                }\r\n                            }}\r\n                            onInstance={instance => (data.instance = instance)}\r\n                        />\r\n                        <button \r\n                            className=\"btn btn-success btn-block\"\r\n                            onClick={() => buy()}\r\n                        >\r\n                            Checkout\r\n                        </button>\r\n                    </div>\r\n                )\r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n\r\n    const showError = error => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? '' : 'none' }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = success => (\r\n        <div\r\n            className=\"alert alert-info\"\r\n            style={{ display: success ? '' : 'none' }}\r\n        >\r\n            Thanks! Your payment was successful!!!\r\n        </div>\r\n    );\r\n        \r\n    const showLoading = loading => (\r\n        loading && (\r\n            <h2>Loading...</h2>\r\n        )\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <h2>Total: ${getTotal()}</h2>\r\n            {showLoading(data.loading)}\r\n            {showError(data.error)}\r\n            {showSuccess(data.success)}\r\n            {showCheckout()}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Checkout;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Layout from './Layout';\r\nimport Card from './Card';\r\nimport Checkout from './Checkout';\r\nimport { getCart } from './cartHelpers';\r\n\r\nconst Cart = () => {\r\n    const [items, setItems] = useState([]);\r\n    const [run, setRun] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setItems(getCart());\r\n    }, [run]);\r\n\r\n    const showItems = items => {\r\n        return (\r\n            <div>\r\n                <h2>Your cart has {`${items.length} items`}</h2>\r\n\r\n                <hr />\r\n                {items.map((product, idx) => (\r\n                    <Card  \r\n                        key={idx}\r\n                        product={product}\r\n                        showAddToCartButton={false}\r\n                        cartUpdate={true}\r\n                        showRemoveProductButton={true}\r\n                        setRun={setRun}\r\n                        run={run}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const noItemsMessage = () => (\r\n        <h2>\r\n            Your cart is empty. \r\n            <br />\r\n            <Link to=\"/shop\">Continue shopping.</Link>\r\n        </h2>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shopping Cart\"\r\n            description=\"Mange your cart items. Add remove checkout or contiue shopping.\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    {items.length > 0 ? showItems(items) : noItemsMessage()}\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <h2 className=\"mb-4\">Your cart Summary</h2>\r\n                    <Checkout \r\n                        products={items} \r\n                        setRun={setRun}\r\n                        run={run}\r\n                    />\r\n                </div>\r\n            </div> \r\n        </Layout>\r\n    );\r\n\r\n};\r\n\r\nexport default Cart;","import React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth/index';\r\nimport { read, update, updateUser } from './apiUser';\r\n\r\nconst Profile = ({match}) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        success: false\r\n    });\r\n\r\n    const { name, email, password, error, success } = values;\r\n    const { token } = isAuthenticated();\r\n\r\n    const init = userId => {\r\n        // console.log(userId);\r\n        read(userId, token)\r\n            .then(data => {\r\n                if(data.error) {\r\n                    setValues({ \r\n                        ...values, \r\n                        error: true \r\n                    })\r\n                } else {\r\n                    setValues({\r\n                        ...values,\r\n                        name: data.name,\r\n                        email: data.email\r\n                    })\r\n                }\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.userId);\r\n    }, []);\r\n\r\n    const handleChange = name => e => {\r\n        setValues({\r\n            ...values,\r\n            error: false,\r\n            [name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        update(match.params.userId, token, { name, email, password }).then(data => {\r\n            if (data.error) {\r\n                // console.log(data.error);\r\n                alert(data.error);\r\n            } else {\r\n                updateUser(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        name: data.name,\r\n                        email: data.email,\r\n                        success: true\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const redirectUser = success => {\r\n        if(success) {\r\n            return <Redirect to=\"/cart\" />\r\n        }\r\n    };\r\n\r\n    const profileUpdate = (name, email, password) => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={name}\r\n                    onChange={handleChange('name')}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={handleChange('email')}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input \r\n                    type=\"passwordt\" \r\n                    className=\"form-control\"\r\n                    value={password} \r\n                    onChange={handleChange('password')} \r\n                />\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={clickSubmit}>submit</button>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Profile Page\"\r\n            description=\"Update your profile\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <h2 className=\"mb-4\">Profile</h2>\r\n            {profileUpdate(name, email, password)}\r\n            {redirectUser(success)}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth/index';\r\nimport { getProducts, deleteProduct } from './apiAdmin';\r\n\r\nconst ManageProducts = () => {\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const {user, token} = isAuthenticated();\r\n\r\n    const loadProducts = () => {\r\n        getProducts()\r\n            .then(data => {\r\n                if(data.error) {\r\n                    console.log(data.error);\r\n                } else {\r\n                    setProducts(data);\r\n                }\r\n            })\r\n    };\r\n\r\n    const destroy = productId => {\r\n        deleteProduct(productId, user._id, token)\r\n            .then(data => {\r\n                if(data.error) {\r\n                    console.log(data.error);\r\n                } else {\r\n                    loadProducts();\r\n                }\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, [])\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Manage Products\"\r\n            description=\"Perform CRUD on products\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h2 className=\"text-center\">\r\n                        {`Total ${products.length} ${products.length > 1 ? 'products.' : 'product.'}`}\r\n                    </h2>\r\n                    <hr />\r\n                    <ul className=\"list-group\">\r\n                        {products.map((product, idx) => (\r\n                            <li \r\n                                className=\"\r\n                                list-group-item \r\n                                d-flex \r\n                                justify-content-between \r\n                                align-items-center\r\n                                \"\r\n                                key={idx}\r\n                            >\r\n                                <strong>{product.name}</strong>\r\n                                <Link to={`/admin/product/update/${product._id}`}>\r\n                                    <span className=\"badge badge-warning badge-pill\">\r\n                                        Update\r\n                                    </span>\r\n                                </Link>\r\n                                <span\r\n                                    className=\"badge badge-danger badge-pill\"\r\n                                    onClick={() => destroy(product._id)}\r\n                                >\r\n                                    Delete\r\n                                </span>\r\n                            </li> \r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            \r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default ManageProducts;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Signup from './user/Signup';\r\nimport Signin from './user/Signin';\r\nimport Home from './core/Home';\r\nimport PrivateRoute from './auth/PrivateRoute';\r\nimport Dashboard from './user/UserDashboard';\r\nimport AdminRoute from './auth/AdminRoute';\r\nimport AdminDashboard from './user/AdminDashboard';\r\nimport AddCategory from './admin/AddCategory';\r\nimport AddProduct from './admin/AddProduct';\r\nimport UpdateProduct from './admin/UpdateProduct';\r\nimport Orders from './admin/Orders';\r\nimport Shop from './core/Shop';\r\nimport Product from './core/Product';\r\nimport Cart from './core/Cart';\r\nimport Profile from './user/Profile';\r\nimport ManageProducts from './admin/ManageProducts';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/shop\" exact component={Shop} />\r\n                <Route path=\"/signin\" exact component={Signin} />\r\n                <Route path=\"/signup\" exact component={Signup} />\r\n                <PrivateRoute \r\n                    path=\"/user/dashboard\" \r\n                    exact \r\n                    component={Dashboard} \r\n                />\r\n                <AdminRoute\r\n                    path=\"/admin/dashboard\"\r\n                    exact\r\n                    component={AdminDashboard}\r\n                />\r\n                <AdminRoute\r\n                    path=\"/create/category\"\r\n                    exact\r\n                    component={AddCategory}\r\n                />\r\n                <AdminRoute\r\n                    path=\"/create/product\"\r\n                    exact\r\n                    component={AddProduct}\r\n                />\r\n                <AdminRoute\r\n                    path=\"/admin/orders\"\r\n                    exact\r\n                    component={Orders}\r\n                />\r\n                <Route path=\"/product/:productId\" exact component={Product} />\r\n                <Route path=\"/cart\" exact component={Cart} />\r\n                <PrivateRoute\r\n                    path=\"/profile/:userId\"\r\n                    exact\r\n                    component={Profile}\r\n                />\r\n                <AdminRoute\r\n                    path=\"/admin/products\"\r\n                    exact\r\n                    component={ManageProducts}\r\n                />\r\n                <AdminRoute\r\n                    path=\"/admin/product/update/:productId\"\r\n                    exact\r\n                    component={UpdateProduct}\r\n                />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './App';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}